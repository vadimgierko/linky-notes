{"version":3,"sources":["hooks/use-theme.js","firebaseConfig.js","hooks/use-auth.js","hooks/use-database.js","components/Header.js","components/About.js","components/SignInForm.js","functions/functions.js","components/ItemsList.js","components/Footer.js","components/AddItemForm.js","components/UpdateItemForm.js","components/ItemPage.js","components/Container.js","App.js","index.js"],"names":["ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","mode","color","background","theme","setTheme","Provider","value","switchToLight","switchToDark","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseAuth","getAuth","database","getDatabase","AuthContext","getStorage","useAuth","AuthProvider","user","setUser","useEffect","unsubscribe","onAuthStateChanged","console","log","signIn","email","password","signInWithEmailAndPassword","then","userCredential","catch","error","alert","message","logOut","signOut","DatabaseContext","useDatabase","DatabaseProvider","items","setItems","tags","setTags","itemsRef","ref","onValue","snapshot","data","val","tagsRef","addItem","item","newItem","updates","push","child","key","update","updateItem","updatedItem","itemKey","set","deleteItem","remove","addTags","newTags","Header","isNavCollapsed","setIsNavCollapsed","handleNavCollapse","className","type","onClick","id","to","About","style","SignInForm","userSignInData","setUserSignInData","placeholder","onChange","e","target","createShorterTitle","string","newString","i","length","createShortContentAfterTitle","createDate","date","Date","day","getUTCDate","month","getUTCMonth","getUTCFullYear","ItemsList","inputedTagValue","setInputedTagValue","availableTags","setAvailableTags","filterTags","setFilterTags","filteredItems","setFilteredItems","TagButton","tag","deleteTag","borderRadius","backgroundColor","cursor","updatedTags","filter","input","sameLettersNum","n","find","availableTag","generateAvailableTags","filteredItemsArray","itemsArray","Object","entries","sameNum","m","filterItems","defaultValue","map","itemArray","textDecoration","content","createdAt","updatedAt","uid","Footer","AddItemForm","source","setItem","itemWithDate","deleteAt","slice","addNewTagsToDatabase","UpdateItemForm","useParams","ItemPage","Container","minHeight","paddingTop","path","exact","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wMAEMA,EAAeC,0BAERC,EAAW,kBAAMC,qBAAWH,IAElC,SAASI,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAC9B,EAA0BC,mBAAS,CACjCC,KAAM,OACNC,MAAO,QACPC,WAAY,oBAHd,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OACE,cAACX,EAAaY,SAAd,CACEC,MAAO,CACLH,QACAI,cAlBgB,kBACpBH,EAAS,CACPJ,KAAM,QACNC,MAAO,QACPC,WAAY,WAeVM,aAZe,kBACnBJ,EAAS,CACPJ,KAAM,OACNC,MAAO,QACPC,WAAY,sBAId,SAOGJ,I,oCCnBDW,EAAMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,gBACnBC,MAAO,+CAKIC,EAAeC,YAAQV,GACvBW,EAAWC,YAAYZ,GCX9Ba,GDciBC,YAAWd,GCddf,2BAEP8B,EAAU,kBAAM5B,qBAAW0B,IAEjC,SAASG,EAAT,GAAqC,IAAb3B,EAAY,EAAZA,SAC7B,EAAwBC,mBAAS,MAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KAuCA,OAdAC,qBAAU,WACR,IAAMC,EAAcC,YAAmBZ,GAAc,SAACQ,GAChDA,GACFC,EAAQD,GACRK,QAAQC,IAAI,oBAEZL,EAAQ,MACRI,QAAQC,IAAI,0BAIhB,OAAO,kBAAMH,OACZ,IAGD,cAACP,EAAYjB,SAAb,CACEC,MAAO,CACLoB,OACAO,OAzCS,SAACC,EAAOC,GACrB,OAAOC,YAA2BlB,EAAcgB,EAAOC,GACpDE,MAAK,SAACC,GAIL,OAFAX,EAAQW,EAAeZ,MACvBK,QAAQC,IAAI,qBACLM,EAAeZ,QAEvBa,OAAM,SAACC,GACNC,MAAMD,EAAME,aAiCZC,OA7BS,WACb,OAAOC,YAAQ1B,GACZmB,MAAK,WACJV,EAAQ,SAETY,OAAM,SAACC,GACNC,MAAMD,EAAME,cAmBhB,SAOG5C,I,oBC5CD+C,EAAkBnD,0BAEXoD,EAAc,kBAAMlD,qBAAWiD,IAErC,SAASE,EAAT,GAAyC,IAAbjD,EAAY,EAAZA,SAEjC,EAAwBC,mBAAS,MAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KAGA,EAA0B5B,mBAAS,MAAnC,mBAAOiD,EAAP,KAAcC,EAAd,KACA,EAAwBlD,mBAAS,IAAjC,mBAAOmD,EAAP,KAAaC,EAAb,KA+LA,OAjGAvB,qBAAU,WACR,IAAMC,EAAcC,YAAmBZ,GAAc,SAACQ,GACpD,GAAIA,EAAM,CACRC,EAAQD,GAuBR,IAAM0B,EAAWC,YAAIjC,EAAU,UAC/BkC,YAAQF,GAAU,SAACG,GACjB,IAAMC,EAAOD,EAASE,MAClBD,GACFP,EAASO,MAMb,IAAME,EAAUL,YAAIjC,EAAU,aAC9BkC,YAAQI,GAAS,SAACH,GAChB,IAAMC,EAAOD,EAASE,MAClBD,EACFL,EAAQK,GAERzB,QAAQC,IAAI,4BAcX,CACLL,EAAQ,MAcR,IAAMyB,EAAWC,YAAIjC,EAAU,UAC/BkC,YAAQF,GAAU,SAACG,GACjB,IAAMC,EAAOD,EAASE,MAClBD,GACFP,EAASO,MAMb,IAAME,EAAUL,YAAIjC,EAAU,aAC9BkC,YAAQI,GAAS,SAACH,GAChB,IAAMC,EAAOD,EAASE,MAClBD,EACFL,EAAQK,GAERzB,QAAQC,IAAI,wBAGhBD,QAAQC,IAAI,0BAIhB,OAAO,kBAAMH,OACZ,IAGD,cAACgB,EAAgBxC,SAAjB,CACEC,MAAO,CACLoB,OAGAsB,QAEAW,QApMU,SAACC,GACf,GAAIlC,EAAM,CACR,IAAMmC,EAAO,eACRD,GAMCE,EAAU,GAGhB,OAFAA,EAAQ,SAHWC,YAAKC,YAAMX,YAAIjC,GAAW,UAAU6C,KAGtBJ,EAE1BK,YAAOb,YAAIjC,GAAW0C,KAyL3BK,WArLa,SAACC,EAAaC,GAC/BC,YAAIjB,YAAIjC,EAAU,SAAWiD,GAA1B,eACED,KAoLDG,WAhLa,SAACF,GAClBG,YAAOnB,YAAIjC,EAAU,SAAWiD,KAmL5BnB,OACAuB,QA/KU,SAACC,GACfJ,YAAIjB,YAAIjC,EAAU,SAAU,CAC1B8B,KAAK,GAAD,mBAAMA,GAAN,YAAewB,QA+JrB,SAiBG5E,I,YCtOQ,SAAS6E,IACtB,MAA+ChF,IAAvCQ,EAAR,EAAQA,MAAOK,EAAf,EAAeA,aAAcD,EAA7B,EAA6BA,cAC7B,EAAyBiB,IAAjBE,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,OAEd,EAA4C5C,oBAAS,GAArD,mBAAO6E,EAAP,KAAuBC,EAAvB,KAEMC,EAAoB,WACxBD,GAAmBD,IAGrB,OACE,qBACEG,UACiB,UAAf5E,EAAMH,KACF,0DACA,wDAJR,SAOE,sBAAK+E,UAAU,YAAf,UACE,sBAAMA,UAAU,uBAAhB,yBACA,wBACEA,UAAU,2BACVC,KAAK,SACL,iBAAe,WACf,iBAAe,iBACf,gBAAc,gBACd,kBAAeJ,EACf,aAAW,oBACXK,QAASH,EARX,SAUE,sBAAMC,UAAU,0BAElB,sBACEA,UAAS,UAAKH,EAAiB,WAAa,KAAnC,oBACTM,GAAG,gBAFL,UAIE,qBAAIH,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVI,GAAG,SACHF,QAAS,WACFL,GACHE,KALN,qBAYF,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVI,GAAG,SACHF,QAAS,WACFL,GACHE,KALN,qBAYDpD,EACC,oBAAIqD,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVI,GAAG,YACHF,QAAS,WACFL,GACHE,KALN,wBAYA,QAELpD,EACC,qBAAKqD,UAAU,kBAAf,SACGrD,EAAKQ,MAAQR,EAAKQ,MAAQ,OAE3B,KACJ,wBACE6C,UACiB,UAAf5E,EAAMH,KACF,qBACC4E,EAAiB,QAAU,uBAC5B,iBACCA,EAAiB,QAAU,uBAElCI,KAAK,SACLC,QAAS,WACY,UAAf9E,EAAMH,KACRQ,IAEAD,IAEGqE,GACHE,KAhBN,SAoBkB,UAAf3E,EAAMH,KACL,mBAAG+E,UAAU,eAEb,mBAAGA,UAAU,4BAGhBrD,EACC,cAAC,IAAD,CACEyD,GAAG,SACHH,KAAK,SACLD,UACEH,EACI,sBACA,8BAENK,QAAS,WACPtC,IACKiC,GACHE,KAXN,qBAkBA,8BACE,cAAC,IAAD,CACEK,GAAG,UACHH,KAAK,SACLD,UACEH,EACI,kBACA,+BAENK,QAAS,WACFL,GACHE,KAVN,+BCrIC,SAASM,IACtB,IAAQjF,EAAUR,IAAVQ,MAER,OACE,sBACEkF,MAAO,CAAEnF,WAAYC,EAAMD,WAAYD,MAAOE,EAAMF,OADtD,UAGE,8BAAG,iCAAQ,+CAAX,+EACA,gDACA,+BACE,mFACA,kDACA,2EACA,2GACA,4HACA,qGAEF,8BACE,mGADF,sKAEA,sDACA,+BACE,yCACA,wEACA,yDACA,iGACA,+DACA,4DAEF,uEACA,+BACE,0CACA,kDACA,4DACA,2FACA,qDC/BO,SAASqF,IACtB,IAAQnF,EAAUR,IAAVQ,MACA8B,EAAWT,IAAXS,OAER,EAA4ClC,mBAAS,CACnDmC,MAAO,GACPC,SAAU,KAFZ,mBAAOoD,EAAP,KAAuBC,EAAvB,KAKA,OACE,sBACEH,MAAO,CAAEnF,WAAYC,EAAMD,WAAYD,MAAOE,EAAMF,OADtD,UAGE,0CACA,uBACA,iCACE,uBACE8E,UAAU,oBACVC,KAAK,QACLS,YAAY,QACZC,SAAU,SAACC,GAAD,OACRH,EAAkB,2BAAKD,GAAN,IAAsBrD,MAAOyD,EAAEC,OAAOtF,YAG3D,uBACEyE,UAAU,oBACVC,KAAK,WACLS,YAAY,WACZC,SAAU,SAACC,GAAD,OACRH,EAAkB,2BAAKD,GAAN,IAAsBpD,SAAUwD,EAAEC,OAAOtF,eAIhE,cAAC,IAAD,CACE6E,GAAG,SACHH,KAAK,SACLD,UAAU,yBACVE,QAAS,kBAAMhD,EAAOsD,EAAerD,MAAOqD,EAAepD,WAJ7D,wBCtCC,SAAS0D,EAAmBC,GAE/B,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC3BA,EAAI,KACJD,GAAwBD,EAAOE,IAIvC,OADAD,GAAwB,MAIrB,SAASG,EAA6BJ,GAEzC,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC3BA,GAAK,IAAMA,EAAI,KACfD,GAAwBD,EAAOE,IAIvC,OADAD,EAAY,MAAQA,EAAY,MAI7B,SAASI,IACZ,IAAMC,EAAO,IAAIC,KACXC,EAAMF,EAAKG,aAAe,GAAK,IAAMH,EAAKG,aAAeH,EAAKG,aAC9DC,EAAQJ,EAAKK,cAAgB,EAAI,GAAK,IAAML,EAAKK,cAAgB,EAAIL,EAAKK,cAAgB,EAGhG,OAFaL,EAAKM,iBACS,IAAMF,EAAQ,IAAMF,ECpBpC,SAASK,IACtB,IAAQxG,EAAUR,IAAVQ,MACAuB,EAASF,IAATE,KACR,EAAoCoB,IAA5BE,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,WAAYrB,EAA3B,EAA2BA,KAE3B,EAA8CnD,mBAAS,IAAvD,mBAAO6G,EAAP,KAAwBC,EAAxB,KACA,EAA0C9G,mBAAS,MAAnD,mBAAO+G,EAAP,KAAsBC,EAAtB,KACA,EAAoChH,mBAAS,IAA7C,mBAAOiH,EAAP,KAAmBC,EAAnB,KAEA,EAA0ClH,mBAAS,IAAnD,mBAAOmH,EAAP,KAAsBC,EAAtB,KA2CA,SAASC,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,UACxB,OACE,yBACEtC,KAAK,SACLD,UAAU,mCACVM,MAAO,CAAEkC,aAAc,IAHzB,UAKGF,EAAK,IACN,mBACEtC,UAAU,6BACVM,MAAO,CACLmC,gBAAiB,MACjBC,OAAQ,WAEVxC,QAAS,kBAAMqC,EAAUD,SAMjC,SAASC,EAAUD,GACjB,IAAMK,EAAcV,EAAWW,QAAO,SAAC/D,GAAD,OAAUA,IAASyD,KACzDJ,EAAcS,GA2ChB,OAzEA9F,qBAAU,WACJsB,EACFnB,QAAQC,IAAI,oBAAqBkB,GAEjCnB,QAAQC,IAAI,sCAEb,CAACkB,IAmDJtB,qBAAU,WACRG,QAAQC,IAAI,mBAAoB4E,GAChCG,EA1BF,SAA+Ba,GAE7B,IADA,IAAId,EAAgB,GADgB,WAE3Bd,GAGP,IAFA,IAAMqB,EAAMnE,EAAK8C,GACb6B,EAAiB,EACZC,EAAI,EAAGA,EAAIF,EAAM3B,OAAQ6B,IAC5BF,EAAME,KAAOT,EAAIS,MAEnBD,IAEuBD,EAAM3B,SACKa,EAAciB,MAC5C,SAACC,GAAD,OAAkBA,IAAiBX,MAGnCP,EAAc/C,KAAKsD,KAbpBrB,EAAI,EAAGA,EAAI9C,EAAK+C,OAAQD,IAAM,EAA9BA,GAmBT,OAAOc,EAKUmB,CAAsBrB,MACtC,CAACA,IAEJhF,qBAAU,YA/FV,SAAqBoF,GACnB,GAAIhE,EAAO,CAGT,IAFA,IAAIkF,EAAqB,GACnBC,EAAaC,OAAOC,QAAQrF,GACzBgD,EAAI,EAAGA,EAAImC,EAAWlC,OAAQD,IAAK,CAC1C,IAAMpC,EAAOuE,EAAWnC,GAAG,GAE3B,GADAjE,QAAQC,IAAI,QAAS4B,GACjBoD,EAAWf,OAAS,EAEtB,IADA,IAAIqC,EAAU,EACLR,EAAI,EAAGA,EAAId,EAAWf,OAAQ6B,IACrC,IAAK,IAAIS,EAAI,EAAGA,EAAI3E,EAAKV,KAAK+C,OAAQsC,IAChC3E,EAAKV,KAAKqF,KAAOvB,EAAWc,MAC9BQ,IACgBtB,EAAWf,QACzBiC,EAAmBnE,KAAnB,YAA4BoE,EAAWnC,UAM/C,IAAK,IAAIuC,EAAI,EAAGA,EAAI3E,EAAKV,KAAK+C,OAAQsC,IACxB3E,EAAKV,KAAKqF,KACVvB,EAAW,IACrBkB,EAAmBnE,KAAnB,YAA4BoE,EAAWnC,KAK/CmB,EAAiB,GAAD,OAAKe,IACrBnG,QAAQC,IAAI,sBAAuBkG,IAmErCM,CAAYxB,GACZjF,QAAQC,IAAI,aAAcgF,KACzB,CAACA,IAEJpF,qBAAU,WACJoB,GACFjB,QAAQC,IAAI,SAAUgB,KAEvB,CAACA,IAGF,sBACEqC,MAAO,CACLnF,WAAYC,EAAMD,WAClBD,MAAOE,EAAMF,OAHjB,UAME,gCACE,uBACE+E,KAAK,OACLD,UAAU,oBACV0D,aAAc7B,EACdnB,YAAY,oCACZC,SAAU,SAACC,GAAD,OAAOkB,EAAmBlB,EAAEC,OAAOtF,UAE9C0G,GAAcA,EAAWf,OACtBe,EAAW0B,KAAI,SAACrB,GAAD,OACb,cAACD,EAAD,CAAqBC,IAAKA,EAAKC,UAAWA,GAA1BD,MAElB,KAEHT,EACC,wBACE7B,UAAU,2CACVM,MAAO,CAACkC,aAAc,IACtBtC,QAAS,WACPgC,EAAc,GAAD,mBAAKD,GAAL,CAAiBJ,KAC9BC,EAAmB,KALvB,SAQGD,IAED,KACHA,GAAmBE,EAAcb,OAC9Ba,EAAc4B,KAAI,SAACrB,EAAKrB,GAAN,OAChB,wBAEEjB,UAAU,gCACVM,MAAO,CAACkC,aAAc,IACtBtC,QAAS,WACPgC,EAAc,GAAD,mBAAKD,GAAL,CAAiBK,KAC9BR,EAAmB,KANvB,SASGQ,GARI,kBAAoBA,MAW7B,QAGN,8BACGH,GAAiBA,EAAcjB,OAC9BiB,EAAcwB,KAAI,SAACC,GACjB5G,QAAQC,IAAI,aAAc2G,GAC1B,IAAMtE,EAAUsE,EAAU,GACpB/E,EAAO+E,EAAU,GACvB,OACE,sBAAK5D,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,6BACE,cAAC,IAAD,CACEI,GAAI,UAAYd,EAChBgB,MAAO,CAACuD,eAAgB,OAAQ3I,MAAOE,EAAMF,OAF/C,SAKI4F,EAAmBjC,EAAKiF,aAI9B,4BAAI3C,EAA6BtC,EAAKiF,WACtC,8BAAMjF,EAAKV,MAAQU,EAAKV,KAAK+C,OACzBrC,EAAKV,KAAKwF,KAAI,SAACrB,GAAD,OACd,wBAEEtC,UAAU,sCACVM,MAAO,CAAEkC,aAAc,IAHzB,SAKGF,GAJI,kBAAoBA,MAO1B,OAEL,8BAAIzD,EAAKkF,UAAT,IAAqBlF,EAAKmF,UAAY,OAASnF,EAAKmF,UAAY,WAElE,qBAAKhE,UAAU,iBAAf,SACGrD,GAAQA,EAAKsH,IACZ,qCACE,+BACE,mBACEjE,UAAU,+BACVM,MAAO,CAAEoC,OAAQ,WACjBxC,QAAS,kBAAMV,EAAWF,QAG9B,cAAC,IAAD,CAAMc,GAAI,sBAAwBd,EAAlC,SACE,mBACEU,UAAU,8BACVM,MAAO,CAAEoC,OAAQ,kBAIrB,UAGR,yBAhDwBpD,MAoD5B,UCvOG,SAAS4E,IACtB,IAAQ9I,EAAUR,IAAVQ,MAER,OACE,sBACEkF,MAAO,CACLnF,WAAYC,EAAMD,WAClBD,MAAOE,EAAMF,OAHjB,UAME,uBACA,mBAAG8E,UAAU,wBAAb,uCCPS,SAASmE,IACtB,IAAQ/I,EAAUR,IAAVQ,MAER,EAAmC2C,IAA3Ba,EAAR,EAAQA,QAAST,EAAjB,EAAiBA,KAAMuB,EAAvB,EAAuBA,QAEvB,EAA8C1E,mBAAS,IAAvD,mBAAO6G,EAAP,KAAwBC,EAAxB,KACA,EAA0C9G,mBAAS,MAAnD,mBAAO+G,EAAP,KAAsBC,EAAtB,KAEA,EAAwBhH,mBAAS,CAC/B8I,QAAS,GACT3F,KAAM,GACNiG,OAAQ,GACRL,UAAW,KACXC,UAAW,OALb,mBAAOnF,EAAP,KAAawF,EAAb,KAgBA,SAAShC,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,UACxB,OACE,yBAAQtC,KAAK,SAASD,UAAU,8BAA8BM,MAAO,CAAEkC,aAAc,IAArF,UACGF,EAAK,IACN,mBACEtC,UAAU,6BACVM,MAAO,CACLmC,gBAAiB,MACjBC,OAAQ,WAEVxC,QAAS,kBAAMqC,EAAUD,SAMjC,SAASC,EAAUD,GACjB,IAAMK,EAAc9D,EAAKV,KAAKyE,QAAO,SAAC/D,GAAD,OAAUA,IAASyD,KACxD+B,EAAQ,2BAAIxF,GAAL,IAAWV,KAAK,YAAKwE,MA6C9B,OAvEA9F,qBAAU,WACJsB,EACFnB,QAAQC,IAAI,oBAAqBkB,GAEjCnB,QAAQC,IAAI,sCAEb,CAACkB,IA4DJtB,qBAAU,WACRG,QAAQC,IAAI,mBAAoB4E,GAChCG,EAvCF,SAA+Ba,GAE7B,IADA,IAAId,EAAgB,GADgB,WAE3Bd,GAGP,IAFA,IAAMqB,EAAMnE,EAAK8C,GACb6B,EAAiB,EACZC,EAAI,EAAGA,EAAIF,EAAM3B,OAAQ6B,IAC5BF,EAAME,KAAOT,EAAIS,MAEnBD,IAEuBD,EAAM3B,SACKa,EAAciB,MAC5C,SAACC,GAAD,OAAkBA,IAAiBX,MAGnCP,EAAc/C,KAAKsD,KAbpBrB,EAAI,EAAGA,EAAI9C,EAAK+C,OAAQD,IAAM,EAA9BA,GAmBT,OAAOc,EAkBUmB,CAAsBrB,MACtC,CAACA,IAGF,sBACEvB,MAAO,CAAEnF,WAAYC,EAAMD,WAAYD,MAAOE,EAAMF,OADtD,UAGE,oDACA,uBACA,iCACE,0BACE8E,UAAU,oBACVU,YAAY,yBACZgD,aAAc7E,EAAKiF,QACnBnD,SAAU,SAACC,GAAD,OACRyD,EAAQ,2BAAKxF,GAAN,IAAYiF,QAASlD,EAAEC,OAAOtF,YAGzC,uBACE0E,KAAK,OACLD,UAAU,oBACV0D,aAAc7B,EACdnB,YAAY,sBACZC,SAAU,SAACC,GAAD,OAAOkB,EAAmBlB,EAAEC,OAAOtF,aAGhDsD,EAAKV,MAAQU,EAAKV,KAAK+C,OACpBrC,EAAKV,KAAKwF,KAAI,SAACrB,GAAD,OACZ,cAACD,EAAD,CAAqBC,IAAKA,EAAKC,UAAWA,GAA1BD,MAGlB,gCACE,8DACA,0BAILT,EACC,gCACE,wBACE7B,UAAU,sCACVM,MAAO,CAAEoC,OAAQ,UAAWF,aAAc,IAC1CtC,QAAS,WACPmE,EAAQ,2BAAIxF,GAAL,IAAWV,KAAK,GAAD,mBAAMU,EAAKV,MAAX,CAAiB0D,OACvCC,EAAmB,KALvB,SAQGD,IAEH,0BAEA,KACHA,GAAmBE,EAAcb,OAC9Ba,EAAc4B,KAAI,SAACrB,EAAKrB,GAAN,OAChB,gCACE,mBACEX,MAAO,CAAEoC,OAAQ,WACjBxC,QAAS,WACPmE,EAAQ,2BAAIxF,GAAL,IAAWV,KAAK,GAAD,mBAAMU,EAAKV,MAAX,CAAiBmE,OACvCR,EAAmB,KAJvB,SAOGQ,IAEH,yBAVQA,EAAMrB,MAalB,KACJ,cAAC,IAAD,CACEb,GAAG,SACHH,KAAK,SACLD,UAAU,0CACVE,QAAS,WACP,IAAMmB,EAAOD,IACPkD,EAAY,2BAAOzF,GAAP,IAAakF,UAAW1C,IACtCiD,IA1FZ,WAEE,IADA,IAAI3E,EAAO,YAAOd,EAAKV,MACd8C,EAAI,EAAGA,EAAItB,EAAQuB,OAAQD,IAClC,IAAK,IAAI8B,EAAI,EAAGA,EAAI5E,EAAK+C,OAAQ6B,IAC/B,GAAIpD,EAAQsB,KAAO9C,EAAK4E,GAAI,CAC1B,IAAMwB,EAAWtD,EACjBtB,EAAO,sBAAOA,EAAQ6E,MAAM,EAAGD,IAAxB,YAAsC5E,EAAQ6E,MAAMD,EAAW,KAI5E7E,EAAQC,GAiFA8E,GACA7F,EAAQ0F,IAER5G,MAAM,2EAERV,QAAQC,IAAI4B,IAbhB,+BCvJS,SAAS6F,IACtB,IAAQtJ,EAAUR,IAAVQ,MACAuB,EAASF,IAATE,KACR,EAA6CoB,IAArCE,EAAR,EAAQA,MAAOmB,EAAf,EAAeA,WAAYjB,EAA3B,EAA2BA,KAAMuB,EAAjC,EAAiCA,QAEzBJ,EAAYqF,cAAZrF,QAER,EAA8CtE,mBAAS,IAAvD,mBAAO6G,EAAP,KAAwBC,EAAxB,KACA,EAA0C9G,mBAAS,MAAnD,mBAAO+G,EAAP,KAAsBC,EAAtB,KAEA,EAAwBhH,mBAAS,MAAjC,mBAAO6D,EAAP,KAAawF,EAAb,KAgBA,SAAShC,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,UACxB,OACE,yBAAQtC,KAAK,SAASD,UAAU,8BAA8BM,MAAO,CAAEkC,aAAc,IAArF,UACGF,EAAK,IACN,mBACEtC,UAAU,6BACVM,MAAO,CACLmC,gBAAiB,MACjBC,OAAQ,WAEVxC,QAAS,kBAAMqC,EAAUD,SAMjC,SAASC,EAAUD,GACjB,IAAMK,EAAc9D,EAAKV,KAAKyE,QAAO,SAAC/D,GAAD,OAAUA,IAASyD,KACxD+B,EAAQ,2BAAIxF,GAAL,IAAWV,KAAK,YAAKwE,MA6C9B,OA7EA9F,qBAAU,WACJoB,GAASqB,GACX+E,EAAQ,2BAAIpG,EAAMqB,IAAX,IAAqBnB,KAAMF,EAAMqB,GAASnB,MAAQF,EAAMqB,GAASnB,KAAK+C,OAASjD,EAAMqB,GAASnB,KAAO,QAE7G,CAACF,EAAOqB,IAEXzC,qBAAU,WACJsB,EACFnB,QAAQC,IAAI,oBAAqBkB,GAEjCnB,QAAQC,IAAI,sCAEb,CAACkB,IA4DJtB,qBAAU,WACRG,QAAQC,IAAI,mBAAoB4E,GAChCG,EAvCF,SAA+Ba,GAE7B,IADA,IAAId,EAAgB,GADgB,WAE3Bd,GAGP,IAFA,IAAMqB,EAAMnE,EAAK8C,GACb6B,EAAiB,EACZC,EAAI,EAAGA,EAAIF,EAAM3B,OAAQ6B,IAC5BF,EAAME,KAAOT,EAAIS,MAEnBD,IAEuBD,EAAM3B,SACKa,EAAciB,MAC5C,SAACC,GAAD,OAAkBA,IAAiBX,MAGnCP,EAAc/C,KAAKsD,KAbpBrB,EAAI,EAAGA,EAAI9C,EAAK+C,OAAQD,IAAM,EAA9BA,GAmBT,OAAOc,EAkBUmB,CAAsBrB,MACtC,CAACA,IAGF,qBACEvB,MAAO,CAAEnF,WAAYC,EAAMD,WAAYD,MAAOE,EAAMF,OADtD,SAIIyB,GAAQA,EAAKsH,IAEbpF,EACA,gCACE,8CACA,uBACA,iCACE,0BACEmB,UAAU,oBACVU,YAAY,yBACZgD,aAAc7E,EAAKiF,QACnBnD,SAAU,SAACC,GAAD,OACRyD,EAAQ,2BAAKxF,GAAN,IAAYiF,QAASlD,EAAEC,OAAOtF,YAGzC,uBACE0E,KAAK,OACLD,UAAU,oBACV0D,aAAc7B,EACdnB,YAAY,sBACZC,SAAU,SAACC,GAAD,OAAOkB,EAAmBlB,EAAEC,OAAOtF,aAGhDsD,EAAKV,MAAQU,EAAKV,KAAK+C,OACpBrC,EAAKV,KAAKwF,KAAI,SAACrB,GAAD,OACZ,cAACD,EAAD,CAAqBC,IAAKA,EAAKC,UAAWA,GAA1BD,MAGlB,gCACE,8DACA,0BAGHT,EACD,gCACE,wBACE7B,UAAU,sCACVM,MAAO,CAAEoC,OAAQ,UAAWF,aAAc,IAC1CtC,QAAS,WACPmE,EAAQ,2BAAIxF,GAAL,IAAWV,KAAK,GAAD,mBAAMU,EAAKV,MAAX,CAAiB0D,OACvCC,EAAmB,KALvB,SAQGD,IAEH,0BAEA,KACHA,GAAmBE,EAAcb,OAC9Ba,EAAc4B,KAAI,SAACrB,EAAKrB,GAAN,OAChB,gCACE,mBACEX,MAAO,CAAEoC,OAAQ,WACjBxC,QAAS,WACPmE,EAAQ,2BAAIxF,GAAL,IAAWV,KAAK,GAAD,mBAAMU,EAAKV,MAAX,CAAiBmE,OACvCR,EAAmB,KAJvB,SAOGQ,IAEH,yBAVQA,EAAMrB,MAalB,KACJ,cAAC,IAAD,CACEb,GAAG,SACHH,KAAK,SACLD,UAAU,0CACVE,QAAS,WACP,IAAMmB,EAAOD,IACPkD,EAAY,2BAAOzF,GAAP,IAAamF,UAAW3C,IACtCiD,IA9FhB,WAEE,IADA,IAAI3E,EAAO,YAAOd,EAAKV,MACd8C,EAAI,EAAGA,EAAItB,EAAQuB,OAAQD,IAClC,IAAK,IAAI8B,EAAI,EAAGA,EAAI5E,EAAK+C,OAAQ6B,IAC/B,GAAIpD,EAAQsB,KAAO9C,EAAK4E,GAAI,CAC1B,IAAMwB,EAAWtD,EACjBtB,EAAO,sBAAOA,EAAQ6E,MAAM,EAAGD,IAAxB,YAAsC5E,EAAQ6E,MAAMD,EAAW,KAI5E7E,EAAQC,GAqFI8E,GACArF,EAAWkF,EAAchF,IAEzB5B,MAAM,2EAERV,QAAQC,IAAIqH,IAbhB,4BAoBF,qDAGF,kGCrLS,SAASM,IACtB,IAAQxJ,EAAUR,IAAVQ,MACR,EAA8B2C,IAAtBE,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,WACP7C,EAASF,IAATE,KAEA2C,EAAYqF,cAAZrF,QAER,EAAwBtE,mBAAS,MAAjC,mBAAO6D,EAAP,KAAawF,EAAb,KAQA,OANAxH,qBAAU,WACJoB,GAASqB,GACX+E,EAAQpG,EAAMqB,MAEf,CAACrB,EAAOqB,IAGT,qBACEgB,MAAO,CACLnF,WAAYC,EAAMD,WAClBD,MAAOE,EAAMF,OAHjB,SAMG2D,EACC,mCACE,sBAAKmB,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,6BAEIc,EAAmBjC,EAAKiF,WAG5B,4BAAIjF,EAAKiF,UACT,8BAAMjF,EAAKV,MAAQU,EAAKV,KAAK+C,OACzBrC,EAAKV,KAAKwF,KAAI,SAACrB,GAAD,OACd,wBAEEtC,UAAU,sCACVM,MAAO,CAAEkC,aAAc,IAHzB,SAKGF,GAJI,kBAAoBA,MAO1B,OAGL,8BAAIzD,EAAKkF,UAAT,IAAqBlF,EAAKmF,UAAY,OAASnF,EAAKmF,UAAY,WAElE,qBAAKhE,UAAU,iBAAf,SACGrD,GAAQA,EAAKsH,IACZ,qCACE,cAAC,IAAD,CAAM7D,GAAG,SAAT,SACE,mBACEJ,UAAU,+BACVM,MAAO,CAAEoC,OAAQ,WACjBxC,QAAS,kBAAMV,EAAWF,QAG9B,cAAC,IAAD,CAAMc,GAAI,sBAAwBd,EAAlC,SACE,mBACEU,UAAU,yBACVM,MAAO,CAAEoC,OAAQ,kBAIrB,OAEN,4BAIJ,uDC9DO,SAASmC,IACtB,IAAQzJ,EAAUR,IAAVQ,MAER,OACE,sBACE4E,UAAU,kBACVM,MAAO,CACLnF,WAAYC,EAAMD,WAClBD,MAAOE,EAAMF,MACb4J,UAAW,SALf,UAQE,cAAClF,EAAD,IACA,sBACEI,UAAU,YACVM,MAAO,CACLnF,WAAYC,EAAMD,WAClBD,MAAOE,EAAMF,MACb6J,WAAY,IALhB,UAQE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC3E,EAAD,MAEF,cAAC,IAAD,CAAO2E,KAAK,UAAZ,SACE,cAACzE,EAAD,MAEF,cAAC,IAAD,CAAO0E,OAAK,EAACD,KAAK,kBAAlB,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOK,OAAK,EAACD,KAAK,SAAlB,SACE,cAACpD,EAAD,MAEF,cAAC,IAAD,CAAOoD,KAAK,YAAZ,SACE,cAACb,EAAD,MAEF,cAAC,IAAD,CAAOc,OAAK,EAACD,KAAK,8BAAlB,SACE,cAACN,EAAD,SAGJ,cAACR,EAAD,UCnDO,SAASgB,IACtB,OACE,cAACpK,EAAD,UACE,cAAC4B,EAAD,UACE,cAACsB,EAAD,UACE,cAAC6G,EAAD,UCDV,IAAMM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,UACE,cAACL,EAAD,QAGJC,K","file":"static/js/main.3f9c5d33.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [theme, setTheme] = useState({\r\n    mode: \"dark\",\r\n    color: \"white\",\r\n    background: \"rgb(39, 37, 37)\"\r\n  });\r\n\r\n  const switchToLight = () => \r\n    setTheme({\r\n      mode: \"light\",\r\n      color: \"black\",\r\n      background: \"white\"\r\n    });\r\n\r\n  const switchToDark = () => \r\n    setTheme({\r\n      mode: \"dark\",\r\n      color: \"white\",\r\n      background: \"rgb(39, 37, 37)\"\r\n    });\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        switchToLight,\r\n        switchToDark\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}","import { initializeApp, getApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Add your Firebase credentials\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBO2_8QOJb3muKvNWqxDfCzViDwNURiUJc\",\r\n  authDomain: \"linky-notes-47eef.firebaseapp.com\",\r\n  databaseURL: \"https://linky-notes-47eef-default-rtdb.firebaseio.com\",\r\n  projectId: \"linky-notes-47eef\",\r\n  storageBucket: \"linky-notes-47eef.appspot.com\",\r\n  messagingSenderId: \"1067601111242\",\r\n  appId: \"1:1067601111242:web:75f3f608656fe612ef6c33\"\r\n};\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const firebaseAuth = getAuth(app);\r\nexport const database = getDatabase(app);\r\n\r\n// Get a reference to the storage service, which is used to create references in your storage bucket\r\nexport const storage = getStorage(app);\r\n","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { firebaseAuth } from \"../firebaseConfig\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged\r\n} from \"firebase/auth\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signIn = (email, password) => {\r\n    return signInWithEmailAndPassword(firebaseAuth, email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        setUser(userCredential.user);\r\n        console.log(\"user is signed in\");\r\n        return userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const logOut = () => {\r\n    return signOut(firebaseAuth)\r\n      .then(() => {\r\n        setUser(null);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(firebaseAuth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        console.log(\"user is logged\");\r\n      } else {\r\n        setUser(null);\r\n        console.log(\"user is logged out\");\r\n      }\r\n    });\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        signIn,\r\n        logOut\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { ref as storageRef, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { firebaseAuth, database, storage } from \"../firebaseConfig\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport {\r\n  ref,\r\n  set,\r\n  push,\r\n  child,\r\n  update,\r\n  onValue,\r\n  remove\r\n} from \"firebase/database\";\r\n\r\nconst DatabaseContext = createContext();\r\n\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\nexport function DatabaseProvider({ children }) {\r\n\r\n  const [user, setUser] = useState(null);\r\n  //const [userData, setUserData] = useState(null);\r\n  //const [users, setUsers] = useState(null);\r\n  const [items, setItems] = useState(null);\r\n  const [tags, setTags] = useState([]);\r\n  //const [userItems, setUserItems] = useState(null);\r\n\r\n  const addItem = (item) => {\r\n    if (user) {\r\n      const newItem = {\r\n        ...item,\r\n        //userId: user.uid\r\n      };\r\n\r\n      const newItemKey = push(child(ref(database), \"notes\")).key;\r\n\r\n      const updates = {};\r\n      updates[\"notes/\" + newItemKey] = newItem;\r\n\r\n      return update(ref(database), updates);\r\n    }\r\n  };\r\n\r\n  const updateItem = (updatedItem, itemKey) => {\r\n    set(ref(database, \"notes/\" + itemKey), {\r\n      ...updatedItem\r\n    });\r\n  };\r\n\r\n  const deleteItem = (itemKey) => {\r\n    remove(ref(database, \"notes/\" + itemKey));\r\n  };\r\n\r\n  //============ TAGS ================\r\n\r\n  const addTags = (newTags) => {\r\n    set(ref(database, \"tags/\"), {\r\n      tags: [...tags, ...newTags]\r\n    });\r\n  };\r\n\r\n  // const updateUserData = (userData) => {\r\n  //   set(ref(database, \"users/\" + user.uid), {\r\n  //     ...userData\r\n  //   });\r\n  // };\r\n\r\n  // const getProfileImageURL = (profileImageRef) => {\r\n  //   // get profile img url to users data:\r\n  //   getDownloadURL(storageRef(storage, profileImageRef))\r\n  //   .then((url) => {\r\n  //     updateUserData({...userData, profileImageURL: url})\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.log(error.message);\r\n  //   });\r\n  // }\r\n\r\n  // const uploadProfileImage = (image) => {\r\n  //   // Create a reference to 'profileImage.jpg'\r\n  //   const profileImageRef = storageRef(storage, `images/profileImages/${user.uid}/profileImg.png`);\r\n\r\n  //   uploadBytes(profileImageRef, image).then((snapshot) => {\r\n  //       if (snapshot) {\r\n  //         getProfileImageURL(profileImageRef);\r\n  //       } else {\r\n  //         console.log(\"file is not uploaded yet...\")\r\n  //       }\r\n  //   });\r\n  // };\r\n\r\n  // const getItemImageURL = (itemImageRef, itemKey, item) => {\r\n  //   getDownloadURL(storageRef(storage, itemImageRef))\r\n  //   .then((url) => {\r\n  //     console.log(\"img url\", url);\r\n  //     const updatedItem = {\r\n  //       ...item,\r\n  //       itemImageURL: url\r\n  //     }\r\n  //     updateItem(updatedItem, itemKey);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.log(error.message);\r\n  //   });\r\n  // }\r\n\r\n  // const uploadItemImage = (image, itemKey, item) => {\r\n  //   const itemImageRef = storageRef(storage, `images/itemsImages/${user.uid}/${itemKey}/itemImg.png`);\r\n\r\n  //   uploadBytes(itemImageRef, image).then((snapshot) => {\r\n  //       if (snapshot) {\r\n  //         getItemImageURL(itemImageRef, itemKey, item);\r\n  //       } else {\r\n  //         console.log(\"file is not uploaded yet...\")\r\n  //       }\r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(firebaseAuth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n\r\n        // const userDataRef = ref(database, `users/${user.uid}`);\r\n        // onValue(userDataRef, (snapshot) => {\r\n        //   const data = snapshot.val();\r\n        //   if (data) {\r\n        //     setUserData(data);\r\n        //   } else {\r\n        //     console.log(\"there are no user data...\");\r\n        //   }\r\n        // });\r\n        // //fetch users list\r\n        // const usersRef = ref(database, `users/`);\r\n        // onValue(usersRef, (snapshot) => {\r\n        //   const data = snapshot.val();\r\n        //   if (data) {\r\n        //     setUsers(data);\r\n        //   } else {\r\n        //     console.log(\"there are no users...\");\r\n        //   }\r\n        // });\r\n\r\n        // fetch all items\r\n        const itemsRef = ref(database, \"notes/\");\r\n        onValue(itemsRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            setItems(data);\r\n          } else {\r\n            //console.log(\"there are no notes\");\r\n          }\r\n        });\r\n        // fetch all tags\r\n        const tagsRef = ref(database, \"tags/tags\");\r\n        onValue(tagsRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            setTags(data);\r\n          } else {\r\n            console.log(\"there are no tags\");\r\n          }\r\n        });\r\n\r\n        // fetch user items after log in\r\n        // const userItemsRef = ref(database, \"notes/\" + user.uid);\r\n        // onValue(userItemsRef, (snapshot) => {\r\n        //   const data = snapshot.val();\r\n        //   if (data) {\r\n        //     setUserItems(data);\r\n        //   } else {\r\n        //     console.log(\"there are no user notes\");\r\n        //   }\r\n        // });\r\n      } else {\r\n        setUser(null);\r\n        //setUserData(null);\r\n        //setUserItems(null);\r\n        //fetch users list\r\n        // const usersRef = ref(database, `users/`);\r\n        // onValue(usersRef, (snapshot) => {\r\n        //   const data = snapshot.val();\r\n        //   if (data) {\r\n        //     setUsers(data);\r\n        //   } else {\r\n        //     console.log(\"there are no users...\");\r\n        //   }\r\n        // });\r\n        // fetch all items\r\n        const itemsRef = ref(database, \"notes/\");\r\n        onValue(itemsRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            setItems(data);\r\n          } else {\r\n            //console.log(\"there are no notes\");\r\n          }\r\n        });\r\n        // fetch all tags\r\n        const tagsRef = ref(database, \"tags/tags\");\r\n        onValue(tagsRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            setTags(data);\r\n          } else {\r\n            console.log(\"there are no tags\");\r\n          }\r\n        });\r\n        console.log(\"user is logged out\");\r\n      }\r\n    });\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <DatabaseContext.Provider\r\n      value={{\r\n        user,\r\n        //userData,\r\n        //users,\r\n        items,\r\n        //userItems,\r\n        addItem,\r\n        updateItem,\r\n        deleteItem,\r\n        //updateUserData,\r\n        //uploadProfileImage,\r\n        //uploadItemImage,\r\n        tags,\r\n        addTags\r\n      }}\r\n    >\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Header() {\r\n  const { theme, switchToDark, switchToLight } = useTheme();\r\n  const { user, logOut } = useAuth();\r\n\r\n  const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n  const handleNavCollapse = () => {\r\n    setIsNavCollapsed(!isNavCollapsed);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={\r\n        theme.mode === \"light\"\r\n          ? \"navbar navbar-expand-lg navbar-light bg-light fixed-top\"\r\n          : \"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <span className=\"navbar-brand mb-0 h1\">linky_notes</span>\r\n        <button\r\n          className=\"navbar-toggler collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarColor01\"\r\n          aria-controls=\"navbarColor01\"\r\n          aria-expanded={isNavCollapsed ? true : false}\r\n          aria-label=\"Toggle navigation\"\r\n          onClick={handleNavCollapse}\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          className={`${isNavCollapsed ? \"collapse\" : null} navbar-collapse`}\r\n          id=\"navbarColor01\"\r\n        >\r\n          <ul className=\"navbar-nav me-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link\"\r\n                to=\"/about\"\r\n                onClick={() => {\r\n                  if (!isNavCollapsed) {\r\n                    handleNavCollapse();\r\n                  }\r\n                }}\r\n              >\r\n                about\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link\"\r\n                to=\"/items\"\r\n                onClick={() => {\r\n                  if (!isNavCollapsed) {\r\n                    handleNavCollapse();\r\n                  }\r\n                }}\r\n              >\r\n                notes\r\n              </Link>\r\n            </li>\r\n            {user ? (\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/add-item\"\r\n                  onClick={() => {\r\n                    if (!isNavCollapsed) {\r\n                      handleNavCollapse();\r\n                    }\r\n                  }}\r\n                >\r\n                  add note\r\n                </Link>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n          {user ? (\r\n            <div className=\"text-muted me-3\">\r\n              {user.email ? user.email : null}\r\n            </div>\r\n          ) : null}\r\n          <button\r\n            className={\r\n              theme.mode === \"light\"\r\n                ? \"btn btn-secondary\" +\r\n                  (isNavCollapsed ? \" me-3\" : \" d-block mt-2 w-100\")\r\n                : \"btn btn-light\" +\r\n                  (isNavCollapsed ? \" me-3\" : \" d-block mt-2 w-100\")\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (theme.mode === \"light\") {\r\n                switchToDark();\r\n              } else {\r\n                switchToLight();\r\n              }\r\n              if (!isNavCollapsed) {\r\n                handleNavCollapse();\r\n              }\r\n            }}\r\n          >\r\n            {theme.mode === \"light\" ? (\r\n              <i className=\"bi bi-moon\"></i>\r\n            ) : (\r\n              <i className=\"bi bi-brightness-high\"></i>\r\n            )}\r\n          </button>\r\n          {user ? (\r\n            <Link\r\n              to=\"/about\"\r\n              type=\"button\"\r\n              className={\r\n                isNavCollapsed\r\n                  ? \"btn btn-danger me-2\"\r\n                  : \"btn btn-danger d-block mt-2\"\r\n              }\r\n              onClick={() => {\r\n                logOut();\r\n                if (!isNavCollapsed) {\r\n                  handleNavCollapse();\r\n                }\r\n              }}\r\n            >\r\n              Log out\r\n            </Link>\r\n          ) : (\r\n            <div>\r\n              <Link\r\n                to=\"/signin\"\r\n                type=\"button\"\r\n                className={\r\n                  isNavCollapsed\r\n                    ? \"btn btn-success\"\r\n                    : \"btn btn-success d-block mt-2\"\r\n                }\r\n                onClick={() => {\r\n                  if (!isNavCollapsed) {\r\n                    handleNavCollapse();\r\n                  }\r\n                }}\r\n              >\r\n                Sign in\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\n\r\nexport default function About() {\r\n  const { theme } = useTheme();\r\n  \r\n  return (\r\n    <div\r\n      style={{ background: theme.background, color: theme.color }}\r\n    >\r\n      <p><strong><em>linky_notes</em></strong> allows you to create notes with keywords, which works similarly to tags.</p>\r\n      <p>Thanks to that:</p>\r\n      <ul>\r\n        <li>your notes are linked with each other by keywords</li>\r\n        <li>they are grouped</li>\r\n        <li>same note can be in a few keywords groups</li>\r\n        <li>you don't need to put them in folders or do any index or table of content</li>\r\n        <li>that is easy to find the particular note by choosing keywords they consist in search field</li>\r\n        <li>you are saving a tone of time to organize & efficiently use them</li>\r\n      </ul>\r\n      <p>\r\n        <strong>At the moment this SPA is available for my personal use only.</strong> You can see my notes, but cannot sign up or modify my database. I've implemented only basic core features for the moment, but app is still growing & is tested.</p>\r\n      <p>At the moment, I can:</p>\r\n      <ul>\r\n        <li>sign in</li>\r\n        <li>add, update & delete notes when logged</li>\r\n        <li>see a list of all items</li>\r\n        <li>add & delete tags for my notes (can leave it without tags also)</li>\r\n        <li>find note/ notes by tag/ tags</li>\r\n        <li>switch dark/ light mode</li>\r\n      </ul>\r\n      <p>Technologies I've used in this project</p>\r\n      <ul>\r\n        <li>React 17</li>\r\n        <li>React Router 5.2</li>\r\n        <li>React Context & useContext</li>\r\n        <li>Firebase 9.1 (authentication, realtime database, storage)</li>\r\n        <li>Bootstrap 5.1</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\n\r\nexport default function SignInForm() {\r\n  const { theme } = useTheme();\r\n  const { signIn } = useAuth();\r\n\r\n  const [userSignInData, setUserSignInData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{ background: theme.background, color: theme.color }}\r\n    >\r\n      <h3>Sign in!</h3>\r\n      <hr />\r\n      <form>\r\n        <input\r\n          className=\"form-control mb-2\"\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          onChange={(e) =>\r\n            setUserSignInData({ ...userSignInData, email: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          className=\"form-control mb-2\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={(e) =>\r\n            setUserSignInData({ ...userSignInData, password: e.target.value })\r\n          }\r\n        />\r\n      </form>\r\n      <Link\r\n        to=\"/items\"\r\n        type=\"button\"\r\n        className=\"btn btn-secondary mb-2\"\r\n        onClick={() => signIn(userSignInData.email, userSignInData.password)}\r\n      >\r\n        Sign in\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export function createShorterTitle(string) {\r\n    let newString = \"\";\r\n    for (let i = 0; i < string.length; i++) {\r\n        if (i < 37) {\r\n            newString = newString + string[i];\r\n        }\r\n    }\r\n    newString = newString + \"...\";\r\n    return newString;\r\n}\r\n\r\nexport function createShortContentAfterTitle(string) {\r\n    let newString = \"\";\r\n    for (let i = 0; i < string.length; i++) {\r\n        if (i >= 37 && i < 71) {\r\n            newString = newString + string[i];\r\n        }\r\n    }\r\n    newString = \"...\" + newString + \"...\";\r\n    return newString;\r\n}\r\n\r\nexport function createDate() {\r\n    const date = new Date();\r\n    const day = date.getUTCDate() < 10 ? \"0\" + date.getUTCDate() : date.getUTCDate();\r\n    const month = date.getUTCMonth() + 1 < 10 ? \"0\" + date.getUTCMonth() + 1 : date.getUTCMonth() + 1;\r\n    const year = date.getUTCFullYear();\r\n    const currentDate = year + \".\" + month + \".\" + day;\r\n    return currentDate;\r\n}","import { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { createShortContentAfterTitle, createShorterTitle } from \"../functions/functions\";\r\n\r\nexport default function ItemsList() {\r\n  const { theme } = useTheme();\r\n  const { user } = useAuth();\r\n  const { items, deleteItem, tags } = useDatabase();\r\n\r\n  const [inputedTagValue, setInputedTagValue] = useState(\"\");\r\n  const [availableTags, setAvailableTags] = useState(null);\r\n  const [filterTags, setFilterTags] = useState([]);\r\n\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n\r\n  function filterItems(filterTags) {\r\n    if (items) {\r\n      let filteredItemsArray = [];\r\n      const itemsArray = Object.entries(items);\r\n      for (let i = 0; i < itemsArray.length; i++) {\r\n        const item = itemsArray[i][1];\r\n        console.log(\"item:\", item)\r\n        if (filterTags.length > 1) {\r\n          let sameNum = 0;\r\n          for (let n = 0; n < filterTags.length; n++) {\r\n            for (let m = 0; m < item.tags.length; m++) {\r\n              if (item.tags[m] === filterTags[n]) {\r\n                sameNum++;\r\n                if (sameNum === filterTags.length) {\r\n                  filteredItemsArray.push([...itemsArray[i]]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          for (let m = 0; m < item.tags.length; m++) {\r\n            const tag = item.tags[m];\r\n            if (tag === filterTags[0]) {\r\n              filteredItemsArray.push([...itemsArray[i]]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setFilteredItems([...filteredItemsArray]);\r\n      console.log(\"filteredItemsArray:\", filteredItemsArray);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tags) {\r\n      console.log(\"tags in database:\", tags);\r\n    } else {\r\n      console.log(\"There are no tags in database...\");\r\n    }\r\n  }, [tags]);\r\n  \r\n  function TagButton({ tag, deleteTag }) {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-secondary mb-2 mt-2 me-2\"\r\n        style={{ borderRadius: 20 }}\r\n      >\r\n        {tag}{\" \"}\r\n        <i\r\n          className=\"bi bi-trash text-white m-2\"\r\n          style={{\r\n            backgroundColor: \"red\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={() => deleteTag(tag)}\r\n        ></i>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  function deleteTag(tag) {\r\n    const updatedTags = filterTags.filter((item) => item !== tag);\r\n    setFilterTags(updatedTags);\r\n  }\r\n\r\n  function generateAvailableTags(input) {\r\n    let availableTags = [];\r\n    for (let i = 0; i < tags.length; i++) {\r\n      const tag = tags[i];\r\n      let sameLettersNum = 0;\r\n      for (let n = 0; n < input.length; n++) {\r\n        if (input[n] === tag[n]) {\r\n          // check every letter in order\r\n          sameLettersNum++;\r\n          // if it's the same, put tag into array\r\n          if (sameLettersNum === input.length) {\r\n            const isThisTagInArrayAlready = availableTags.find(\r\n              (availableTag) => availableTag === tag\r\n            );\r\n            if (!isThisTagInArrayAlready) {\r\n              availableTags.push(tag);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return availableTags;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"inputedTagValue:\", inputedTagValue);\r\n    setAvailableTags(generateAvailableTags(inputedTagValue));\r\n  }, [inputedTagValue]);\r\n\r\n  useEffect(() => {\r\n    filterItems(filterTags);\r\n    console.log(\"filterTags\", filterTags);\r\n  }, [filterTags]);\r\n\r\n  useEffect(() => {\r\n    if (items) {\r\n      console.log(\"items:\", items);\r\n    }\r\n  }, [items]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          defaultValue={inputedTagValue}\r\n          placeholder=\"type some tag to search for notes\"\r\n          onChange={(e) => setInputedTagValue(e.target.value)}\r\n        />\r\n        {filterTags && filterTags.length\r\n          ? filterTags.map((tag) => (\r\n              <TagButton key={tag} tag={tag} deleteTag={deleteTag} />\r\n            ))\r\n          : null\r\n        }\r\n        {inputedTagValue ? (\r\n          <button\r\n            className=\"btn btn-outline-secondary mb-2 mt-2 me-2\"\r\n            style={{borderRadius: 20}}\r\n            onClick={() => {\r\n              setFilterTags([...filterTags, inputedTagValue]);\r\n              setInputedTagValue(\"\");\r\n            }}\r\n          >\r\n            {inputedTagValue}\r\n          </button>    \r\n        ) : null}\r\n        {inputedTagValue && availableTags.length\r\n          ? availableTags.map((tag, i) => (\r\n              <button\r\n                key={\"tag-button-for-\" + tag}\r\n                className=\"btn btn-outline-secondary m-2\"\r\n                style={{borderRadius: 20}}\r\n                onClick={() => {\r\n                  setFilterTags([...filterTags, tag]);\r\n                  setInputedTagValue(\"\");\r\n                }}\r\n              >\r\n                {tag}\r\n              </button>\r\n            )\r\n        ) : null}\r\n        \r\n      </div>\r\n      <div>\r\n        {filteredItems && filteredItems.length ? (\r\n          filteredItems.map((itemArray) => {\r\n            console.log(\"itemArray:\", itemArray);\r\n            const itemKey = itemArray[0];\r\n            const item = itemArray[1];\r\n            return (\r\n              <div className=\"row\" key={itemKey}>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <h4>\r\n                      <Link\r\n                        to={\"/items/\" + itemKey}\r\n                        style={{textDecoration: \"none\", color: theme.color}}\r\n                      >\r\n                        {\r\n                          createShorterTitle(item.content)\r\n                        }\r\n                      </Link>\r\n                    </h4>\r\n                    <p>{createShortContentAfterTitle(item.content)}</p>\r\n                    <div>{item.tags && item.tags.length\r\n                      ? item.tags.map((tag) => (\r\n                        <button\r\n                          key={\"tag-button-for-\" + tag}\r\n                          className=\"btn btn-outline-secondary mb-2 me-2\"\r\n                          style={{ borderRadius: 20 }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                        ))\r\n                      : (null)}\r\n                    </div>\r\n                    <p>{item.createdAt} {item.updatedAt ? \" -> \" + item.updatedAt : null}</p>\r\n                  </div>\r\n                  <div className=\"col-2 text-end\">\r\n                    {user && user.uid ? (\r\n                      <>\r\n                        <span>\r\n                          <i\r\n                            className=\"bi bi-trash text-danger me-2\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => deleteItem(itemKey)}\r\n                          ></i>\r\n                        </span>\r\n                        <Link to={\"/items/update-item/\" + itemKey}>\r\n                          <i\r\n                            className=\"bi bi-pencil text-info me-2\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                          ></i>\r\n                        </Link>\r\n                      </>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            );\r\n          })\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// {items ? (\r\n//   Object.entries(items).map((itemObject) => {\r\n//     const itemKey = itemObject[0];\r\n//     const item = itemObject[1];\r\n//     return (\r\n//       <div className=\"row\" key={itemKey}>\r\n//         <div className=\"row\">\r\n//           <div className=\"col\">\r\n//             <h4>\r\n//               <Link\r\n//                 to={\"/items/\" + itemKey}\r\n//                 style={{textDecoration: \"none\", color: theme.color}}\r\n//               >\r\n//                 {\r\n//                   createShorterTitle(item.content)\r\n//                 }\r\n//               </Link>\r\n//             </h4>\r\n//             <p>{createShortContentAfterTitle(item.content)}</p>\r\n//             <div>{item.tags && item.tags.length\r\n//               ? item.tags.map((tag) => (\r\n//                 <button\r\n//                   key={\"tag-button-for-\" + tag}\r\n//                   className=\"btn btn-outline-secondary mb-2 me-2\"\r\n//                   style={{ borderRadius: 20 }}\r\n//                 >\r\n//                   {tag}\r\n//                 </button>\r\n//                 ))\r\n//               : (null)}\r\n//             </div>\r\n//             <p>{item.createdAt} {item.updatedAt ? \" -> \" + item.updatedAt : null}</p>\r\n//           </div>\r\n//           <div className=\"col-2 text-end\">\r\n//             {user && user.uid ? (\r\n//               <>\r\n//                 <span>\r\n//                   <i\r\n//                     className=\"bi bi-trash text-danger me-2\"\r\n//                     style={{ cursor: \"pointer\" }}\r\n//                     onClick={() => deleteItem(itemKey)}\r\n//                   ></i>\r\n//                 </span>\r\n//                 <Link to={\"/items/update-item/\" + itemKey}>\r\n//                   <i\r\n//                     className=\"bi bi-pencil text-info me-2\"\r\n//                     style={{ cursor: \"pointer\" }}\r\n//                   ></i>\r\n//                 </Link>\r\n//               </>\r\n//             ) : null}\r\n//           </div>\r\n//         </div>\r\n//         <hr />\r\n//       </div>\r\n//     );\r\n//   })\r\n// ) : (\r\n//   <div>\r\n//     <h2>Downloading data...</h2>\r\n//   </div>\r\n// )}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\n\r\nexport default function Footer() {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      <hr />\r\n      <p className=\"text-center mb-0 pb-3\">&copy; 2021 Vadim Gierko</p>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/use-theme\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { createDate } from \"../functions/functions\";\r\n\r\nexport default function AddItemForm() {\r\n  const { theme } = useTheme();\r\n\r\n  const { addItem, tags, addTags } = useDatabase();\r\n\r\n  const [inputedTagValue, setInputedTagValue] = useState(\"\");\r\n  const [availableTags, setAvailableTags] = useState(null);\r\n\r\n  const [item, setItem] = useState({\r\n    content: \"\",\r\n    tags: [],\r\n    source: \"\",\r\n    createdAt: null,\r\n    updatedAt: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (tags) {\r\n      console.log(\"tags in database:\", tags);\r\n    } else {\r\n      console.log(\"There are no tags in database...\");\r\n    }\r\n  }, [tags]);\r\n  \r\n  function TagButton({ tag, deleteTag }) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-secondary mb-2 me-2\" style={{ borderRadius: 20 }}>\r\n        {tag}{\" \"}\r\n        <i\r\n          className=\"bi bi-trash text-white m-2\"\r\n          style={{\r\n            backgroundColor: \"red\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={() => deleteTag(tag)}\r\n        ></i>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  function deleteTag(tag) {\r\n    const updatedTags = item.tags.filter((item) => item !== tag);\r\n    setItem({...item, tags: [...updatedTags]});\r\n  }\r\n\r\n  function generateAvailableTags(input) {\r\n    let availableTags = [];\r\n    for (let i = 0; i < tags.length; i++) {\r\n      const tag = tags[i];\r\n      let sameLettersNum = 0;\r\n      for (let n = 0; n < input.length; n++) {\r\n        if (input[n] === tag[n]) {\r\n          // check every letter in order\r\n          sameLettersNum++;\r\n          // if it's the same, put tag into array\r\n          if (sameLettersNum === input.length) {\r\n            const isThisTagInArrayAlready = availableTags.find(\r\n              (availableTag) => availableTag === tag\r\n            );\r\n            if (!isThisTagInArrayAlready) {\r\n              availableTags.push(tag);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return availableTags;\r\n  }\r\n\r\n  function addNewTagsToDatabase() {\r\n    let newTags = [...item.tags];\r\n    for (let i = 0; i < newTags.length; i++) {\r\n      for (let n = 0; n < tags.length; n++) {\r\n        if (newTags[i] === tags[n]) {\r\n          const deleteAt = i;\r\n          newTags = [...newTags.slice(0, deleteAt), ...newTags.slice(deleteAt + 1)];\r\n        }\r\n      }\r\n    }\r\n    addTags(newTags);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"inputedTagValue:\", inputedTagValue);\r\n    setAvailableTags(generateAvailableTags(inputedTagValue));\r\n  }, [inputedTagValue]);\r\n\r\n  return (\r\n    <div\r\n      style={{ background: theme.background, color: theme.color }}\r\n    >\r\n      <h3>Create a new note!</h3>\r\n      <hr />\r\n      <form>\r\n        <textarea\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"note content goes here\"\r\n          defaultValue={item.content}\r\n          onChange={(e) =>\r\n            setItem({ ...item, content: e.target.value })\r\n          }\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          defaultValue={inputedTagValue}\r\n          placeholder=\"type your tags here\"\r\n          onChange={(e) => setInputedTagValue(e.target.value)}\r\n        />\r\n      </form>\r\n      {item.tags && item.tags.length\r\n        ? item.tags.map((tag) => (\r\n            <TagButton key={tag} tag={tag} deleteTag={deleteTag} />\r\n          ))\r\n        : (\r\n          <div>\r\n            <p>There are no note tags yet...</p>\r\n            <hr />\r\n          </div>\r\n        )\r\n      }\r\n      {inputedTagValue ? (\r\n        <div>\r\n          <button\r\n            className=\"btn btn-outline-secondary mb-2 me-2\"\r\n            style={{ cursor: \"pointer\", borderRadius: 20 }}\r\n            onClick={() => {\r\n              setItem({...item, tags: [...item.tags, inputedTagValue]});\r\n              setInputedTagValue(\"\");\r\n            }}\r\n          >\r\n            {inputedTagValue}\r\n          </button>\r\n          <hr />\r\n        </div>\r\n      ) : null}\r\n      {inputedTagValue && availableTags.length\r\n        ? availableTags.map((tag, i) => (\r\n            <div key={tag + i}>\r\n              <p\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  setItem({...item, tags: [...item.tags, tag]});\r\n                  setInputedTagValue(\"\");\r\n                }}\r\n              >\r\n                {tag}\r\n              </p>\r\n              <hr />\r\n            </div>\r\n          ))\r\n        : null}\r\n      <Link\r\n        to=\"/items\"\r\n        type=\"button\"\r\n        className=\"btn btn-success mb-2 d-block text-white\"\r\n        onClick={() => {\r\n          const date = createDate();\r\n          const itemWithDate = {...item, createdAt: date};\r\n          if (itemWithDate) {\r\n            addNewTagsToDatabase();\r\n            addItem(itemWithDate);\r\n          } else {\r\n            alert(\"There is a problem with adding date to your note... Note is not created\");\r\n          }\r\n          console.log(item);\r\n        }}\r\n      >\r\n        Add a new note\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/use-theme\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { createDate } from \"../functions/functions\";\r\n\r\nexport default function UpdateItemForm() {\r\n  const { theme } = useTheme();\r\n  const { user } = useAuth();\r\n  const { items, updateItem, tags, addTags } = useDatabase();\r\n\r\n  const { itemKey } = useParams();\r\n\r\n  const [inputedTagValue, setInputedTagValue] = useState(\"\");\r\n  const [availableTags, setAvailableTags] = useState(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (items && itemKey) {\r\n      setItem({...items[itemKey], tags: items[itemKey].tags && items[itemKey].tags.length ? items[itemKey].tags : []});\r\n    }\r\n  }, [items, itemKey]);\r\n\r\n  useEffect(() => {\r\n    if (tags) {\r\n      console.log(\"tags in database:\", tags);\r\n    } else {\r\n      console.log(\"There are no tags in database...\");\r\n    }\r\n  }, [tags]);\r\n  \r\n  function TagButton({ tag, deleteTag }) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-secondary mb-2 me-2\" style={{ borderRadius: 20 }}>\r\n        {tag}{\" \"}\r\n        <i\r\n          className=\"bi bi-trash text-white m-2\"\r\n          style={{\r\n            backgroundColor: \"red\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={() => deleteTag(tag)}\r\n        ></i>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  function deleteTag(tag) {\r\n    const updatedTags = item.tags.filter((item) => item !== tag);\r\n    setItem({...item, tags: [...updatedTags]});\r\n  }\r\n\r\n  function generateAvailableTags(input) {\r\n    let availableTags = [];\r\n    for (let i = 0; i < tags.length; i++) {\r\n      const tag = tags[i];\r\n      let sameLettersNum = 0;\r\n      for (let n = 0; n < input.length; n++) {\r\n        if (input[n] === tag[n]) {\r\n          // check every letter in order\r\n          sameLettersNum++;\r\n          // if it's the same, put tag into array\r\n          if (sameLettersNum === input.length) {\r\n            const isThisTagInArrayAlready = availableTags.find(\r\n              (availableTag) => availableTag === tag\r\n            );\r\n            if (!isThisTagInArrayAlready) {\r\n              availableTags.push(tag);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return availableTags;\r\n  }\r\n\r\n  function addNewTagsToDatabase() {\r\n    let newTags = [...item.tags];\r\n    for (let i = 0; i < newTags.length; i++) {\r\n      for (let n = 0; n < tags.length; n++) {\r\n        if (newTags[i] === tags[n]) {\r\n          const deleteAt = i;\r\n          newTags = [...newTags.slice(0, deleteAt), ...newTags.slice(deleteAt + 1)];\r\n        }\r\n      }\r\n    }\r\n    addTags(newTags);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"inputedTagValue:\", inputedTagValue);\r\n    setAvailableTags(generateAvailableTags(inputedTagValue));\r\n  }, [inputedTagValue]);\r\n\r\n  return (\r\n    <div\r\n      style={{ background: theme.background, color: theme.color }}\r\n    >\r\n      {\r\n        user && user.uid ?\r\n        (\r\n        item ?\r\n        <div>\r\n          <h3>Update note!</h3>\r\n          <hr />\r\n          <form>\r\n            <textarea\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"note content goes here\"\r\n              defaultValue={item.content}\r\n              onChange={(e) =>\r\n                setItem({ ...item, content: e.target.value })\r\n              }\r\n            ></textarea>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mb-2\"\r\n              defaultValue={inputedTagValue}\r\n              placeholder=\"type your tags here\"\r\n              onChange={(e) => setInputedTagValue(e.target.value)}\r\n            />\r\n          </form>\r\n          {item.tags && item.tags.length\r\n            ? item.tags.map((tag) => (\r\n                <TagButton key={tag} tag={tag} deleteTag={deleteTag} />\r\n              ))\r\n            : (\r\n              <div>\r\n                <p>There are no note tags yet...</p>\r\n                <hr />\r\n              </div>\r\n            )}\r\n            {inputedTagValue ? (\r\n            <div>\r\n              <button\r\n                className=\"btn btn-outline-secondary mb-2 me-2\"\r\n                style={{ cursor: \"pointer\", borderRadius: 20 }}\r\n                onClick={() => {\r\n                  setItem({...item, tags: [...item.tags, inputedTagValue]});\r\n                  setInputedTagValue(\"\");\r\n                }}\r\n              >\r\n                {inputedTagValue}\r\n              </button>\r\n              <hr />\r\n            </div>\r\n          ) : null}\r\n          {inputedTagValue && availableTags.length\r\n            ? availableTags.map((tag, i) => (\r\n                <div key={tag + i}>\r\n                  <p\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      setItem({...item, tags: [...item.tags, tag]});\r\n                      setInputedTagValue(\"\");\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </p>\r\n                  <hr />\r\n                </div>\r\n              ))\r\n            : null}\r\n          <Link\r\n            to=\"/items\"\r\n            type=\"button\"\r\n            className=\"btn btn-success mb-2 d-block text-white\"\r\n            onClick={() => {\r\n              const date = createDate();\r\n              const itemWithDate = {...item, updatedAt: date};\r\n              if (itemWithDate) {\r\n                addNewTagsToDatabase();\r\n                updateItem(itemWithDate, itemKey);\r\n              } else {\r\n                alert(\"There is a problem with adding date to your note... Note is not created\");\r\n              }\r\n              console.log(itemWithDate);\r\n            }}\r\n          >\r\n            Update note\r\n          </Link>                    \r\n        </div>\r\n        :\r\n        <h3>Downloading data...</h3>\r\n      )\r\n      :\r\n      <h3>You need to log in to update this item if it belongs to you...</h3>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { createShorterTitle } from \"../functions/functions\";\r\n\r\nexport default function ItemPage() {\r\n  const { theme } = useTheme();\r\n  const { items, deleteItem } = useDatabase();\r\n  const { user } = useAuth();\r\n\r\n  const { itemKey } = useParams();\r\n\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (items && itemKey) {\r\n      setItem(items[itemKey]);\r\n    }\r\n  }, [items, itemKey]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      {item ? (\r\n        <>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h4>\r\n                {\r\n                  createShorterTitle(item.content)\r\n                }\r\n              </h4>\r\n              <p>{item.content}</p>\r\n              <div>{item.tags && item.tags.length\r\n                ? item.tags.map((tag) => (\r\n                  <button\r\n                    key={\"tag-button-for-\" + tag}\r\n                    className=\"btn btn-outline-secondary mb-2 me-2\"\r\n                    style={{ borderRadius: 20 }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                  ))\r\n                : (null)}\r\n              </div>\r\n              \r\n              <p>{item.createdAt} {item.updatedAt ? \" -> \" + item.updatedAt : null}</p>\r\n            </div>\r\n            <div className=\"col-2 text-end\">\r\n              {user && user.uid ? (\r\n                <>\r\n                  <Link to=\"/items\">\r\n                    <i\r\n                      className=\"bi bi-trash text-danger mx-2\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => deleteItem(itemKey)}\r\n                    ></i>\r\n                  </Link>\r\n                  <Link to={\"/items/update-item/\" + itemKey}>\r\n                    <i\r\n                      className=\"bi bi-pencil text-info\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    ></i>\r\n                  </Link>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h1>Downloading data...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nimport Header from \"./Header\";\r\nimport About from \"./About.js\";\r\nimport SignInForm from \"./SignInForm.js\";\r\nimport ItemsList from \"./ItemsList\";\r\nimport Footer from \"./Footer.js\";\r\nimport AddItemForm from \"./AddItemForm\";\r\nimport UpdateItemForm from \"./UpdateItemForm\";\r\nimport ItemPage from \"./ItemPage\";\r\n\r\nexport default function Container() {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color,\r\n        minHeight: \"100vh\"\r\n      }}\r\n    >\r\n      <Header />\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          background: theme.background,\r\n          color: theme.color,\r\n          paddingTop: 70\r\n        }}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/signin\">\r\n            <SignInForm />\r\n          </Route>\r\n          <Route exact path=\"/items/:itemKey\">\r\n            <ItemPage />\r\n          </Route>\r\n          <Route exact path=\"/items\">\r\n            <ItemsList />\r\n          </Route>\r\n          <Route path=\"/add-item\">\r\n            <AddItemForm />\r\n          </Route>\r\n          <Route exact path=\"/items/update-item/:itemKey\">\r\n            <UpdateItemForm />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ThemeProvider } from \"./hooks/use-theme.js\";\r\nimport { AuthProvider } from \"./hooks/use-auth.js\";\r\nimport { DatabaseProvider } from \"./hooks/use-database.js\";\r\nimport Container from \"./components/Container\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <AuthProvider>\r\n        <DatabaseProvider>\r\n          <Container />\r\n        </DatabaseProvider>\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\"; // CHANGE TO HASHROUTER BEFORE DEPLOYING GH-PAGES !!!\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n//import \"bootstrap-icons/font/bootstrap-icons.css\"; //doesn't work for some unknown reason...\r\nimport \"./styles.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StrictMode>,\r\n  rootElement\r\n);"],"sourceRoot":""}