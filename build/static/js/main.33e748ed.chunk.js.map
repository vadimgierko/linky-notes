{"version":3,"sources":["hooks/use-theme.js","firebaseConfig.js","hooks/use-auth.js","hooks/use-database.js","components/atoms/NavLink.js","components/molecules/NavLinksList.js","components/atoms/LogButton.js","components/organisms/Header.js","pages/About.js","pages/SignInForm.js","components/atoms/TagButtonWithTrashIcon.js","components/atoms/FormTagButton.js","components/atoms/TagButtonGeneratedByInput.js","components/organisms/TagSearchForm.js","components/atoms/TagButton.js","components/atoms/TrashIconButton.js","components/atoms/PencilIconButton.js","components/atoms/EyeIconButton.js","components/molecules/ItemCard.js","components/organisms/ItemsList.js","pages/ItemsPage.js","components/organisms/Footer.js","components/atoms/Input.js","components/atoms/Button.js","components/organisms/SourceForm.js","components/organisms/ItemForm.js","functions/functions.js","pages/AddItemPage.js","pages/UpdateItemPage.js","pages/ItemPage.js","pages/TagsPage.js","pages/AddSourcePage.js","pages/Container.js","App.js","index.js"],"names":["ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","mode","color","background","theme","setTheme","Provider","value","switchToLight","switchToDark","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseAuth","getAuth","database","getDatabase","AuthContext","getStorage","useAuth","AuthProvider","user","setUser","useEffect","unsubscribe","onAuthStateChanged","console","log","signIn","email","password","signInWithEmailAndPassword","then","userCredential","catch","error","alert","message","logOut","signOut","DatabaseContext","useDatabase","DatabaseProvider","items","setItems","tags","setTags","sources","setSources","itemsRef","ref","onValue","snapshot","data","val","tagsRef","sourcesRef","addItem","item","newItem","updates","push","child","key","update","updateItem","updatedItem","itemKey","set","deleteItem","remove","addTags","newTags","addSource","NavLink","link","sectionName","handleLinkClick","replace","toLowerCase","className","to","onClick","NavLinksList","sectionsList","length","map","section","LogButton","handleLogButtonClick","logButtonText","type","Header","isNavCollapsed","setIsNavCollapsed","handleNavCollapse","id","About","style","SignInForm","userSignInData","setUserSignInData","placeholder","onChange","e","target","TagButtonWithTrashIcon","tag","onTrashIconClick","borderRadius","backgroundColor","cursor","FormTagButton","TagButtonGeneratedByInput","TagSearchForm","chosenTags","setChosenTags","searchLinkFromFilterTags","setSearchLinkFromFilterTags","form","inputedTagValue","setInputedTagValue","availableTags","setAvailableTags","generateLinkAfterDeletionOfTag","updatedTags","filter","i","input","sameLettersNum","n","find","availableTag","generateAvailableTags","defaultValue","deleteTag","TagButton","TrashIconButton","handleOnTrashButtonClick","PencilIconButton","EyeIconButton","ItemCard","deleteLink","editLink","deleteFunction","createdAt","updatedAt","content","tagLink","source","sourceKey","sourceObject","name","surname","title","city","year","fetchSourceObjectAndConvertIntoSourceRepresentation","page","ItemsList","slice","reverse","itemArray","ItemsPage","search","useLocation","filterTags","setFilterTags","filteredItems","setFilteredItems","searchValue","split","convertedTags","decodeURI","filteredItemsArray","itemsArray","Object","entries","sameNum","m","filterItems","Footer","href","textDecoration","Input","handleChange","Button","buttonStyle","buttonText","handleClick","SourceForm","handleSubmit","handleCancel","headerText","setItemArray","keyValuePair","newValue","updatedItemArray","fromEntries","ItemForm","passedItem","onItemFormClick","passedItemKey","sourcesList","setSourcesList","setItem","itemTags","setItemTags","isAddSourceFormNeeded","setIsAddSourceFormNeeded","sourceArray","sourceRepresentation","itemWithDate","date","Date","day","getUTCDate","month","getUTCMonth","getUTCFullYear","createDate","newTag","includes","addNewTagsToDatabase","AddItemPage","uid","UpdateItemPage","useParams","ItemPage","ALPHABET","TagsPage","letter","AddSourcePage","Container","minHeight","paddingTop","path","exact","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.33e748ed.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [theme, setTheme] = useState({\r\n    mode: \"dark\",\r\n      color: \"white\",\r\n      background: \"rgb(13, 17, 23)\"\r\n  });\r\n\r\n  const switchToLight = () =>\r\n    setTheme({\r\n      mode: \"light\",\r\n      color: \"black\",\r\n      background: \"white\"\r\n    });\r\n\r\n  const switchToDark = () =>\r\n    setTheme({\r\n      mode: \"dark\",\r\n      color: \"white\",\r\n      background: \"rgb(13, 17, 23)\"\r\n    });\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        switchToLight,\r\n        switchToDark\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import { initializeApp, getApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Add your Firebase credentials\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBO2_8QOJb3muKvNWqxDfCzViDwNURiUJc\",\r\n  authDomain: \"linky-notes-47eef.firebaseapp.com\",\r\n  databaseURL: \"https://linky-notes-47eef-default-rtdb.firebaseio.com\",\r\n  projectId: \"linky-notes-47eef\",\r\n  storageBucket: \"linky-notes-47eef.appspot.com\",\r\n  messagingSenderId: \"1067601111242\",\r\n  appId: \"1:1067601111242:web:75f3f608656fe612ef6c33\"\r\n};\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const firebaseAuth = getAuth(app);\r\nexport const database = getDatabase(app);\r\n\r\n// Get a reference to the storage service, which is used to create references in your storage bucket\r\nexport const storage = getStorage(app);\r\n","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { firebaseAuth } from \"../firebaseConfig\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged\r\n} from \"firebase/auth\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signIn = (email, password) => {\r\n    return signInWithEmailAndPassword(firebaseAuth, email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        setUser(userCredential.user);\r\n        console.log(\"user is signed in\");\r\n        return userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const logOut = () => {\r\n    return signOut(firebaseAuth)\r\n      .then(() => {\r\n        setUser(null);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(firebaseAuth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        console.log(\"user is logged\");\r\n      } else {\r\n        setUser(null);\r\n        console.log(\"user is logged out\");\r\n      }\r\n    });\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        signIn,\r\n        logOut\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { ref as storageRef, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { database, storage } from \"../firebaseConfig\";\r\n\r\nimport {\r\n  ref,\r\n  set,\r\n  push,\r\n  child,\r\n  update,\r\n  onValue,\r\n  remove\r\n} from \"firebase/database\";\r\n\r\nconst DatabaseContext = createContext();\r\n\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\nexport function DatabaseProvider({ children }) {\r\n\r\n  const [items, setItems] = useState(null);\r\n  const [tags, setTags] = useState([]);\r\n  const [sources, setSources] = useState(null);\r\n\r\n  const addItem = (item) => {\r\n    const newItem = {\r\n      ...item,\r\n    };\r\n\r\n    const newItemKey = push(child(ref(database), \"notes\")).key;\r\n\r\n    const updates = {};\r\n    updates[\"notes/\" + newItemKey] = newItem;\r\n\r\n    return update(ref(database), updates);\r\n  };\r\n\r\n  const updateItem = (updatedItem, itemKey) => {\r\n    set(ref(database, \"notes/\" + itemKey), {\r\n      ...updatedItem\r\n    });\r\n  };\r\n\r\n  const deleteItem = (itemKey) => {\r\n    remove(ref(database, \"notes/\" + itemKey));\r\n  };\r\n\r\n  //============ TAGS ================\r\n\r\n  const addTags = (newTags) => {\r\n    set(ref(database, \"tags/\"), {\r\n      tags: [...tags, ...newTags]\r\n    });\r\n  };\r\n\r\n  //========== SOURCES =============\r\n\r\n  const addSource = (item) => {\r\n    const newItem = {\r\n      ...item,\r\n    };\r\n\r\n    const newItemKey = push(child(ref(database), \"sources\")).key;\r\n\r\n    const updates = {};\r\n    updates[\"sources/\" + newItemKey] = newItem;\r\n\r\n    return update(ref(database), updates);\r\n  };\r\n\r\n  // const updateUserData = (userData) => {\r\n  //   set(ref(database, \"users/\" + user.uid), {\r\n  //     ...userData\r\n  //   });\r\n  // };\r\n\r\n  // const getProfileImageURL = (profileImageRef) => {\r\n  //   // get profile img url to users data:\r\n  //   getDownloadURL(storageRef(storage, profileImageRef))\r\n  //   .then((url) => {\r\n  //     updateUserData({...userData, profileImageURL: url})\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.log(error.message);\r\n  //   });\r\n  // }\r\n\r\n  // const uploadProfileImage = (image) => {\r\n  //   // Create a reference to 'profileImage.jpg'\r\n  //   const profileImageRef = storageRef(storage, `images/profileImages/${user.uid}/profileImg.png`);\r\n\r\n  //   uploadBytes(profileImageRef, image).then((snapshot) => {\r\n  //       if (snapshot) {\r\n  //         getProfileImageURL(profileImageRef);\r\n  //       } else {\r\n  //         console.log(\"file is not uploaded yet...\")\r\n  //       }\r\n  //   });\r\n  // };\r\n\r\n  // const getItemImageURL = (itemImageRef, itemKey, item) => {\r\n  //   getDownloadURL(storageRef(storage, itemImageRef))\r\n  //   .then((url) => {\r\n  //     console.log(\"img url\", url);\r\n  //     const updatedItem = {\r\n  //       ...item,\r\n  //       itemImageURL: url\r\n  //     }\r\n  //     updateItem(updatedItem, itemKey);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.log(error.message);\r\n  //   });\r\n  // }\r\n\r\n  // const uploadItemImage = (image, itemKey, item) => {\r\n  //   const itemImageRef = storageRef(storage, `images/itemsImages/${user.uid}/${itemKey}/itemImg.png`);\r\n\r\n  //   uploadBytes(itemImageRef, image).then((snapshot) => {\r\n  //       if (snapshot) {\r\n  //         getItemImageURL(itemImageRef, itemKey, item);\r\n  //       } else {\r\n  //         console.log(\"file is not uploaded yet...\")\r\n  //       }\r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // fetch all items\r\n    const itemsRef = ref(database, \"notes/\");\r\n    onValue(itemsRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setItems(data);\r\n        //console.log(\"items in database:\", data);\r\n      } else {\r\n        //console.log(\"there are no notes...\");\r\n      }\r\n    });\r\n    // fetch all tags\r\n    const tagsRef = ref(database, \"tags/tags\");\r\n    onValue(tagsRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setTags(data);\r\n        //console.log(\"tags in database:\", data);\r\n      } else {\r\n        //console.log(\"there are no tags...\");\r\n      }\r\n    });\r\n    // fetch all sources\r\n    const sourcesRef = ref(database, \"sources/\");\r\n    onValue(sourcesRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setSources(data);\r\n        //console.log(\"sources in database:\", data);\r\n      } else {\r\n        //console.log(\"there are no sources...\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <DatabaseContext.Provider\r\n      value={{\r\n        items,\r\n        addItem,\r\n        updateItem,\r\n        deleteItem,\r\n        //updateUserData,\r\n        //uploadProfileImage,\r\n        //uploadItemImage,\r\n        tags,\r\n        addTags,\r\n        sources,\r\n        addSource\r\n      }}\r\n    >\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function NavLink({ sectionName, handleLinkClick }) {\r\n  let link;\r\n\r\n  if (sectionName === \"notes\") {\r\n    link = \"/\";\r\n  } else {\r\n    link = \"/\" + sectionName.replace(/ /g, \"-\").toLowerCase();\r\n  }\r\n\r\n  return (\r\n    <Link className=\"nav-link\" to={link} onClick={handleLinkClick}>\r\n      {sectionName}\r\n    </Link>\r\n  );\r\n}","import NavLink from \"../atoms/NavLink\";\r\n\r\nexport default function NavLinksList({ sectionsList, handleLinkClick }) {\r\n  return (\r\n    <ul className=\"navbar-nav me-auto\">\r\n      {sectionsList && sectionsList.length\r\n        ? sectionsList.map((section) => (\r\n            <li key={section + \"navlink\"} className=\"nav-item\">\r\n              <NavLink\r\n                sectionName={section}\r\n                handleLinkClick={handleLinkClick}\r\n              />\r\n            </li>\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function LogButton({\r\n  link,\r\n  className,\r\n  handleLogButtonClick,\r\n  logButtonText\r\n}) {\r\n  return (\r\n    <Link\r\n      to={link}\r\n      type=\"button\"\r\n      className={className}\r\n      onClick={handleLogButtonClick}\r\n    >\r\n      {logButtonText}\r\n    </Link>\r\n  );\r\n}\r\n","import { useTheme } from \"../../hooks/use-theme\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\nimport { useState } from \"react\";\r\nimport NavLinksList from \"../molecules/NavLinksList\";\r\nimport LogButton from \"../atoms/LogButton\";\r\n\r\nexport default function Header() {\r\n  const { theme, switchToDark, switchToLight } = useTheme();\r\n  const { user, logOut } = useAuth();\r\n\r\n  const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n  const handleNavCollapse = () => {\r\n    setIsNavCollapsed(!isNavCollapsed);\r\n  };\r\n\r\n  const onLogButtonClick = () => {\r\n    if (user) {\r\n      logOut();\r\n    }\r\n    if (!isNavCollapsed) {\r\n      handleNavCollapse();\r\n    }\r\n  };\r\n\r\n  const sectionsList = [\r\n    \"about\",\r\n    \"notes\",\r\n    \"tags\",\r\n    //\"sources\",\r\n    \"add note\",\r\n    \"add source\"\r\n  ];\r\n\r\n  return (\r\n    <nav\r\n      className={\r\n        theme.mode === \"light\"\r\n          ? \"navbar navbar-expand-lg navbar-light bg-light fixed-top\"\r\n          : \"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <span className=\"navbar-brand mb-0 h1\">linky_notes</span>\r\n        <button\r\n          className=\"navbar-toggler collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarColor01\"\r\n          aria-controls=\"navbarColor01\"\r\n          aria-expanded={isNavCollapsed ? true : false}\r\n          aria-label=\"Toggle navigation\"\r\n          onClick={handleNavCollapse}\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          className={`${isNavCollapsed ? \"collapse\" : null} navbar-collapse`}\r\n          id=\"navbarColor01\"\r\n        >\r\n          <NavLinksList\r\n            sectionsList={sectionsList}\r\n            handleLinkClick={() => {\r\n              if (!isNavCollapsed) {\r\n                handleNavCollapse();\r\n              }\r\n            }}\r\n          />\r\n          {/** user email when loged */}\r\n          {user ? (\r\n            <div className=\"text-muted me-3\">\r\n              {user.email ? user.email : null}\r\n            </div>\r\n          ) : null}\r\n          {/** switch mode btn */}\r\n          <button\r\n            className={\r\n              theme.mode === \"light\"\r\n                ? \"btn btn-secondary\" +\r\n                  (isNavCollapsed ? \" me-3\" : \" d-block mt-2 w-100\")\r\n                : \"btn btn-light\" +\r\n                  (isNavCollapsed ? \" me-3\" : \" d-block mt-2 w-100\")\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (theme.mode === \"light\") {\r\n                switchToDark();\r\n              } else {\r\n                switchToLight();\r\n              }\r\n              if (!isNavCollapsed) {\r\n                handleNavCollapse();\r\n              }\r\n            }}\r\n          >\r\n            {theme.mode === \"light\" ? (\r\n              <i className=\"bi bi-moon\"></i>\r\n            ) : (\r\n              <i className=\"bi bi-brightness-high\"></i>\r\n            )}\r\n          </button>\r\n          <LogButton\r\n            link={user ? \"/about\" : \"/signin\"}\r\n            logButtonText={user ? \"Log out\" : \"Sign in\"}\r\n            className={\r\n              isNavCollapsed\r\n                ? \"btn btn-\" + (user ? \"danger\" : \"success\") + \" me-2\"\r\n                : \"btn btn-\" + (user ? \"danger\" : \"success\") + \" d-block mt-2\"\r\n            }\r\n            handleLogButtonClick={onLogButtonClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\n\r\nexport default function About() {\r\n  const { theme } = useTheme();\r\n  \r\n  return (\r\n    <div\r\n      style={{ background: theme.background, color: theme.color }}\r\n    >\r\n      <p><strong><em>linky_notes</em></strong> allows you to create notes with tags & sources.</p>\r\n      <p>Thanks to that:</p>\r\n      <ul>\r\n        <li>your notes are linked with each other by tags</li>\r\n        <li>they are grouped by tags & sources</li>\r\n        <li>the note can have few tags, so it would be in a few keywords groups</li>\r\n        <li>you don't need to put them in folders or do any index or table of content</li>\r\n        <li>that is easy to find the particular note by choosing keywords they consist in search field</li>\r\n        <li>you are saving a tone of time to organize & efficiently use them</li>\r\n      </ul>\r\n      <p>\r\n        <strong>At the moment this SPA is available for my personal use only,</strong> , because I've made it first of all for myself. I read a lot, create a lot and... do a lot notes. I couldn't manage hunderds of my notes, so I've decided to build this app. And I'm very proud, that finally, after one year of learning web development, I've solved one of my biggest problems thanks to my own app. Now my notes will be tagged, organized & easy to filter.</p>\r\n        <p>You can see my notes, but cannot sign up or modify my database. I've implemented only basic core features for the moment, but app is still growing & is tested by me. When right time comes, I'll enable creating accounts for users like you ;-)</p>\r\n      <p>At the moment, I can:</p>\r\n      <ul>\r\n        <li>sign in</li>\r\n        <li><strong>add, update & delete notes</strong> when logged</li>\r\n        <li>add & delete <strong>tags</strong> for my notes or leave it without</li>\r\n        <li>add & delete <strong>source</strong> for my notes or leave it without</li>\r\n        <li><strong>search/ filter notes by tag/ tags</strong></li>\r\n        <li>searching mechanism generates link for each searching session, so I can navigate beetween searching sessions and/ or can send searching session link to someone if I need to</li>\r\n        <li>switch dark/ light mode</li>\r\n      </ul>\r\n      <p>Technologies I've used in this project</p>\r\n      <ul>\r\n        <li>React 17</li>\r\n        <li>React Router 5.2</li>\r\n        <li>React Context & useContext</li>\r\n        <li>Firebase 9.1 (authentication, realtime database, storage)</li>\r\n        <li>Bootstrap 5.1</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\n\r\nexport default function SignInForm() {\r\n  const { theme } = useTheme();\r\n  const { signIn } = useAuth();\r\n\r\n  const [userSignInData, setUserSignInData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{ background: theme.background, color: theme.color }}\r\n    >\r\n      <h3>Sign in!</h3>\r\n      <hr />\r\n      <form>\r\n        <input\r\n          className=\"form-control mb-2\"\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          onChange={(e) =>\r\n            setUserSignInData({ ...userSignInData, email: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          className=\"form-control mb-2\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={(e) =>\r\n            setUserSignInData({ ...userSignInData, password: e.target.value })\r\n          }\r\n        />\r\n      </form>\r\n      <Link\r\n        to=\"/items\"\r\n        type=\"button\"\r\n        className=\"btn btn-secondary mb-2\"\r\n        onClick={() => signIn(userSignInData.email, userSignInData.password)}\r\n      >\r\n        Sign in\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export default function TagButtonWithTrashIcon({ tag, onTrashIconClick }) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary mb-2 me-2\"\r\n            style={{ borderRadius: 20 }}\r\n        >\r\n            {tag}{\" \"}\r\n            <i\r\n                className=\"bi bi-trash text-white m-2\"\r\n                style={{\r\n                    backgroundColor: \"red\",\r\n                    cursor: \"pointer\"\r\n                }}\r\n                onClick={onTrashIconClick}\r\n            ></i>\r\n        </button>\r\n    );\r\n}\r\n","export default function FormTagButton({ tag, onClick }) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary mb-2 me-2\"\r\n            style={{ borderRadius: 20 }}\r\n            onClick={onClick}\r\n        >\r\n            {tag}\r\n        </button>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function TagButtonGeneratedByInput({ tag, link, onClick }) {\r\n    return (\r\n        <Link to={link}>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary mb-2 me-2\"\r\n                style={{ borderRadius: 20 }}\r\n                onClick={onClick}\r\n            >\r\n                {tag}\r\n            </button>\r\n        </Link>\r\n    );\r\n}\r\n  ","import { useEffect, useState } from \"react\";\r\nimport TagButtonWithTrashIcon from \"../atoms/TagButtonWithTrashIcon\";\r\nimport FormTagButton from \"../atoms/FormTagButton\";\r\nimport TagButtonGeneratedByInput from \"../atoms/TagButtonGeneratedByInput\";\r\nimport { useTheme } from \"../../hooks/use-theme\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function TagSearchForm({\r\n  tags,\r\n  chosenTags,\r\n  setChosenTags,\r\n  searchLinkFromFilterTags,\r\n  setSearchLinkFromFilterTags,\r\n  form\r\n  }) {\r\n  const { theme } = useTheme();\r\n  const [inputedTagValue, setInputedTagValue] = useState(\"\");\r\n  const [availableTags, setAvailableTags] = useState(null);\r\n\r\n  function deleteTag(tag) {\r\n    const updatedTags = chosenTags.filter((item) => item !== tag);\r\n    setChosenTags(updatedTags);\r\n  }\r\n\r\n  function generateAvailableTags(input) {\r\n    let availableTags = [];\r\n    for (let i = 0; i < tags.length; i++) {\r\n      const tag = tags[i];\r\n      let sameLettersNum = 0;\r\n      for (let n = 0; n < input.length; n++) {\r\n        if (input[n] === tag[n]) {\r\n          // check every letter in order\r\n          sameLettersNum++;\r\n          // if it's the same, put tag into array\r\n          if (sameLettersNum === input.length) {\r\n            const isThisTagInArrayAlready = availableTags.find(\r\n              (availableTag) => availableTag === tag\r\n            );\r\n            if (!isThisTagInArrayAlready) {\r\n              availableTags.push(tag);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return availableTags;\r\n  }\r\n\r\n  function generateLinkAfterDeletionOfTag(tag) {\r\n    const updatedTags = chosenTags.filter((item) => item !== tag);\r\n    let link = \"\";\r\n    if (updatedTags && updatedTags.length) {\r\n      for (let i = 0; i < updatedTags.length; i++) {\r\n        if (i === 0) {\r\n          link = updatedTags[i];\r\n        } else {\r\n          link = link + \"+\" + updatedTags[i];\r\n        }\r\n      }\r\n    }\r\n    return link;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setAvailableTags(generateAvailableTags(inputedTagValue));\r\n  }, [inputedTagValue]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        className={\r\n          \"form-control mb-2 + bg-\" +\r\n          theme.mode +\r\n          \" text-\" +\r\n          (theme.mode === \"dark\" ? \"light\" : \"dark\")\r\n        }\r\n        defaultValue={inputedTagValue}\r\n        placeholder=\"type some tag\"\r\n        onChange={(e) => setInputedTagValue(e.target.value)}\r\n      />\r\n      {/** FOR NOTES SEARCH */}\r\n      {!form && chosenTags && chosenTags.length\r\n        ? chosenTags.map((tag) => {\r\n          if (tag && tag.length) {\r\n            return (\r\n              <button\r\n                key={\"tag-btn-with-trash-icon-for-\" + tag}\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary mb-2 me-2\"\r\n                style={{ borderRadius: 20 }}\r\n              >\r\n                {tag}{\" \"}\r\n                <Link\r\n                  to={\"/search?name=\" + generateLinkAfterDeletionOfTag(tag)}\r\n                >\r\n                  <i\r\n                    className=\"bi bi-trash text-white m-2\"\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </button>\r\n            )\r\n          }\r\n        })\r\n        : null}\r\n      {/** FOR FORM SEARCH */}\r\n      {form && chosenTags && chosenTags.length\r\n        ? chosenTags.map((tag) => (\r\n            <TagButtonWithTrashIcon\r\n              key={tag}\r\n              tag={tag}\r\n              onTrashIconClick={() => deleteTag(tag)}\r\n            />\r\n          ))\r\n        : null}\r\n      {/** FOR NOTES SEARCH: */}\r\n      {!form && inputedTagValue ? (\r\n        <TagButtonGeneratedByInput\r\n          tag={inputedTagValue}\r\n          link={\r\n          \"/search?name=\" +\r\n          (searchLinkFromFilterTags\r\n              ? searchLinkFromFilterTags + \"+\" + inputedTagValue\r\n              : inputedTagValue)\r\n          }\r\n          onClick={() => {\r\n            const link = searchLinkFromFilterTags\r\n                ? searchLinkFromFilterTags + \"+\" + inputedTagValue\r\n                : inputedTagValue;\r\n            setSearchLinkFromFilterTags(link);\r\n            setInputedTagValue(\"\");\r\n          }}\r\n        />\r\n      ) : null}\r\n      {!form && inputedTagValue && availableTags.length\r\n        ? availableTags.map((tag, i) => (\r\n          <TagButtonGeneratedByInput\r\n            key={tag}\r\n            tag={tag}\r\n            link={\r\n            \"/search?name=\" +\r\n            (searchLinkFromFilterTags\r\n                ? searchLinkFromFilterTags + \"+\" + tag\r\n                : tag)\r\n            }\r\n            onClick={() => {\r\n              const link = searchLinkFromFilterTags\r\n                  ? searchLinkFromFilterTags + \"+\" + tag\r\n                  : tag;\r\n              setSearchLinkFromFilterTags(link);\r\n              setInputedTagValue(\"\");\r\n            }}\r\n          />\r\n          ))\r\n        : null}\r\n      {/** FOR FORM SEARCH */}\r\n      {form && inputedTagValue ? (\r\n        <FormTagButton\r\n          tag={inputedTagValue}\r\n          onClick={() => {\r\n            setChosenTags([...chosenTags, inputedTagValue]);\r\n            setInputedTagValue(\"\");\r\n          }}\r\n        />\r\n      ) : null}\r\n      {form && inputedTagValue && availableTags.length\r\n        ? availableTags.map((tag, i) => (\r\n            <FormTagButton\r\n              key={tag}\r\n              tag={tag}\r\n              onClick={() => {\r\n                setChosenTags([...chosenTags, tag]);\r\n                setInputedTagValue(\"\");\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function TagButton({ tag }) {\r\n    return (\r\n        <Link to={\"/search?name=\" + tag}>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary mb-2 me-2\"\r\n                style={{ borderRadius: 20 }}\r\n            >\r\n                {tag}\r\n            </button>\r\n        </Link>\r\n    );\r\n}\r\n  ","import { Link } from \"react-router-dom\";\r\n\r\nexport default function TrashIconButton({ link, handleOnTrashButtonClick }) {\r\n    return (\r\n        <Link to={link}>\r\n            <i\r\n                className=\"bi bi-trash text-danger\"\r\n                onClick={handleOnTrashButtonClick}\r\n            ></i>\r\n        </Link>\r\n    );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function PencilIconButton({ link }) {\r\n    return (\r\n        <Link to={link}>\r\n            <i className=\"bi bi-pencil text-info me-2\"></i>\r\n        </Link>\r\n    );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function EyeIconButton({ link }) {\r\n    return (\r\n        <Link to={link}>\r\n            <i className=\"bi bi-eye text-secondary me-2\"></i>\r\n        </Link>\r\n    );\r\n}","import TagButton from \"../atoms/TagButton\";\r\nimport { useTheme } from \"../../hooks/use-theme\";\r\nimport TrashIconButton from \"../atoms/TrashIconButton\";\r\nimport PencilIconButton from \"../atoms/PencilIconButton\";\r\nimport EyeIconButton from \"../atoms/EyeIconButton\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\n\r\nexport default function ItemCard({\r\n  item,\r\n  itemKey,\r\n  deleteLink,\r\n  editLink,\r\n  deleteFunction\r\n}) {\r\n  const { theme } = useTheme();\r\n  const { sources } = useDatabase();\r\n\r\n  function fetchSourceObjectAndConvertIntoSourceRepresentation(sourceKey) {\r\n    if (sources) {\r\n      const sourceObject = sources[sourceKey];\r\n      if (sourceObject) {\r\n        return `${sourceObject.name} ${sourceObject.surname}, ${sourceObject.title}, ${sourceObject.city} ${sourceObject.year}`;\r\n      } else {\r\n        return \"source was deleted probably...\";\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"card mb-2 shadow bg-\" + theme.mode + (theme.mode === \"dark\" ? \" border-secondary\" : \"\")}>\r\n      <div className=\"card-header\">\r\n        <div className=\"row\">\r\n          <div className=\"col text-muted\">\r\n            {item.createdAt} {item.updatedAt ? \"/ \" + item.updatedAt : null}\r\n          </div>\r\n          <div className=\"col text-end\">\r\n            <EyeIconButton link={\"/notes/\" + itemKey} />\r\n            <PencilIconButton link={editLink} />\r\n            <TrashIconButton\r\n              link={deleteLink}\r\n              handleOnTrashButtonClick={deleteFunction}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">{item.content}</p>\r\n        {item.tags && item.tags.length\r\n          ? item.tags.map((tag) => (\r\n              <TagButton \r\n                key={\"item-tag-\" + tag}\r\n                tag={tag}\r\n                tagLink={\"/search?name=\" + tag}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n      <div className=\"card-footer text-muted\">\r\n        {item.source\r\n          ? fetchSourceObjectAndConvertIntoSourceRepresentation(item.source) +\r\n            \" [\" +\r\n            item.page +\r\n            \"]\"\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useTheme } from \"../../hooks/use-theme\";\r\nimport ItemCard from \"../molecules/ItemCard\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\n\r\nexport default function ItemsList({ items }) {\r\n  const { theme } = useTheme();\r\n  const { deleteItem } = useDatabase();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      <div>\r\n        {items.slice().reverse().map((itemArray) => {\r\n          const itemKey = itemArray[0];\r\n          const item = itemArray[1];\r\n          return (\r\n            <ItemCard\r\n              key={\"item-\" + itemKey}\r\n              item={item}\r\n              itemKey={itemKey}\r\n              editLink={\"/notes/update-note/\" + itemKey}\r\n              deleteFunction={() => deleteItem(itemKey)}\r\n              deleteLink=\"/\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport TagSearchForm from \"../components/organisms/TagSearchForm\";\r\nimport ItemsList from \"../components/organisms/ItemsList\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ItemsPage() {\r\n\r\n  const { theme } = useTheme();\r\n\r\n  const { search } = useLocation();\r\n\r\n  const { items, tags } = useDatabase();\r\n\r\n  const [filterTags, setFilterTags] = useState([]);\r\n  const [searchLinkFromFilterTags, setSearchLinkFromFilterTags] = useState(\r\n    null\r\n  );\r\n\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      //console.log(\"search:\", search);\r\n      const searchValue = search.slice(6);\r\n      //console.log(\"searchValue\", searchValue)\r\n      if (searchValue.length) {\r\n        // when search value changes, set filter tags:\r\n        setFilterTags(() => {\r\n          const tags = searchValue.split(\"+\");\r\n          // decode tags from URL:\r\n          let convertedTags = [];\r\n          for (let n = 0; n < tags.length; n++) {\r\n            convertedTags.push(decodeURI(tags[n]));\r\n          }\r\n          setSearchLinkFromFilterTags(() => {\r\n            let link = \"\";\r\n            for (let i = 0; i < convertedTags.length; i++) {\r\n              if (i === 0) {\r\n                link = convertedTags[i];\r\n              } else {\r\n                link = link + \"+\" + convertedTags[i];\r\n              }\r\n            }\r\n            return link;\r\n          });\r\n          //console.log(\"converted tags:\", convertedTags)\r\n          return [...convertedTags];\r\n        });\r\n      } else {\r\n        //console.log(\"there is no search value\");\r\n        setFilterTags([]);\r\n        setSearchLinkFromFilterTags(null);\r\n      }\r\n    } else {\r\n      //console.log(\"There is no search value.\");\r\n    }\r\n  }, [search]);\r\n\r\n  function filterItems(filterTags) {\r\n    if (items) {\r\n      if (filterTags && filterTags.length) {\r\n        let filteredItemsArray = [];\r\n        const itemsArray = Object.entries(items);\r\n        for (let i = 0; i < itemsArray.length; i++) {\r\n          const item = itemsArray[i][1];\r\n          let sameNum = 0;\r\n          for (let n = 0; n < filterTags.length; n++) {\r\n            for (let m = 0; m < item.tags.length; m++) {\r\n              if (item.tags[m] === filterTags[n]) {\r\n                sameNum++;\r\n                if (sameNum === filterTags.length) {\r\n                  filteredItemsArray.push([...itemsArray[i]]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      setFilteredItems([...filteredItemsArray]);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    //console.log(\"filterTags:\", filterTags);\r\n    filterItems(filterTags);\r\n  }, [filterTags, items]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      <TagSearchForm\r\n        tags={tags}\r\n        chosenTags={filterTags}\r\n        setChosenTags={setFilterTags}\r\n        searchLinkFromFilterTags={searchLinkFromFilterTags}\r\n        setSearchLinkFromFilterTags={setSearchLinkFromFilterTags}\r\n      />\r\n      {filterTags && filterTags.length ? (\r\n        filteredItems && filteredItems.length ? (\r\n          <ItemsList items={filteredItems} />\r\n        ) : (\r\n          <div>There are no notes including this tag/tags...</div>\r\n        )\r\n      ) : (\r\n        <ItemsList items={items ? Object.entries(items) : []} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useTheme } from \"../../hooks/use-theme\";\r\n\r\nexport default function Footer() {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      <hr />\r\n      <p className=\"text-center mb-0 pb-3\">&copy; 2021 <a href=\"https://github.com/vadimgierko\" target=\"_blank\" style={{textDecoration: \"none\"}}>Vadim Gierko</a></p>\r\n    </div>\r\n  );\r\n}","import { useTheme } from \"../../hooks/use-theme\";\r\n\r\nexport default function Input({ defaultValue, placeholder, handleChange }) {\r\n    // takes default value & handle change => pass inputed value\r\n    const { theme } = useTheme();\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={\"form-control mb-2 + bg-\" + theme.mode + \" text-\" + (theme.mode === \"dark\" ? \"light\" : \"dark\")}\r\n            defaultValue={defaultValue}\r\n            placeholder={placeholder}\r\n            onChange={(e) => handleChange(e.target.value)}\r\n        />\r\n    );\r\n}","export default function Button({ buttonStyle, buttonText, handleClick }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={\"btn btn-\" + buttonStyle + \" mb-2 me-2\"}\r\n      onClick={handleClick}\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n","import Input from \"../atoms/Input\";\r\nimport Button from \"../atoms/Button\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"../../hooks/use-theme\";\r\n\r\nexport default function SourceForm({\r\n  item,\r\n  handleSubmit,\r\n  handleCancel,\r\n  headerText,\r\n  buttonText\r\n}) {\r\n\r\n  const { theme } = useTheme();\r\n  const [itemArray, setItemArray] = useState([]); // [[key, value], [key, value], ...]\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      // if item for update passed\r\n      setItemArray([...Object.entries(item)]);\r\n      //console.log(\"item received in Form:\", item);\r\n    } else {\r\n      // for adding new item\r\n      const emptyItem = {\r\n        title: \"\",\r\n        name: \"\",\r\n        surname: \"\",\r\n        city: \"\",\r\n        year: \"\"\r\n      };\r\n      setItemArray([...Object.entries(emptyItem)]);\r\n    }\r\n  }, [item]);\r\n\r\n  return (\r\n    <div className={\"card mb-2 shadow bg-\" + theme.mode + (theme.mode === \"dark\" ? \" border-secondary\" : \"\")}>\r\n      <div className=\"card-header fw-bold text-center\">{headerText}</div>\r\n      <div className=\"card-body\">\r\n        <form>\r\n          {itemArray && itemArray.length\r\n            ? itemArray.map((keyValuePair, i) => (\r\n                <Input\r\n                  key={\"key-value-pair-\" + i}\r\n                  defaultValue={keyValuePair[1]}\r\n                  placeholder={keyValuePair[0]}\r\n                  handleChange={(newValue) => {\r\n                    const key = keyValuePair[0];\r\n                    const updatedItemArray = [...itemArray];\r\n                    updatedItemArray[i] = [...updatedItemArray[i]];\r\n                    updatedItemArray[i] = [key, newValue];\r\n                    setItemArray([...updatedItemArray]);\r\n                  }}\r\n                />\r\n              ))\r\n            : null}\r\n        </form>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <Button\r\n          buttonStyle=\"primary\"\r\n          handleClick={() => handleSubmit(Object.fromEntries(itemArray))}\r\n          buttonText={buttonText}\r\n        />\r\n        <Button\r\n          buttonStyle=\"secondary\"\r\n          handleClick={handleCancel}\r\n          buttonText=\"Cancel\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../../hooks/use-theme\";\r\nimport { createDate } from \"../../functions/functions\";\r\nimport TagSearchForm from \"./TagSearchForm\";\r\nimport SourceForm from \"./SourceForm\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\n\r\nexport default function ItemForm({\r\n  tags,\r\n  addTags,\r\n  passedItem,\r\n  onItemFormClick,\r\n  link,\r\n  buttonText,\r\n  headerText,\r\n  passedItemKey\r\n}) {\r\n  const { theme } = useTheme();\r\n  const { sources, addSource } = useDatabase();\r\n\r\n  const [sourcesList, setSourcesList] = useState([]);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [itemTags, setItemTags] = useState([]);\r\n\r\n  const [isAddSourceFormNeeded, setIsAddSourceFormNeeded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (sources) {\r\n      setSourcesList([...Object.entries(sources)]);\r\n    }\r\n  }, [sources]);\r\n\r\n  useEffect(() => {\r\n    if (passedItem) {\r\n      setItem({ ...passedItem });\r\n      if (passedItem.tags.length) {\r\n        setItemTags([...passedItem.tags]);\r\n      }\r\n    } else {\r\n      setItem({\r\n        content: \"\",\r\n        tags: [],\r\n        source: \"\",\r\n        page: \"\",\r\n        createdAt: null,\r\n        updatedAt: null\r\n      });\r\n    }\r\n  }, [passedItem]);\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setItem({ ...item, tags: [...itemTags] });\r\n    }\r\n  }, [itemTags]);\r\n\r\n  function addNewTagsToDatabase() {\r\n    let newTags = [];\r\n    for (let i = 0; i < item.tags.length; i++) {\r\n      const newTag = item.tags[i];\r\n      if (!tags.includes(newTag)) {\r\n        newTags.push(newTag);\r\n      }\r\n    }\r\n    if (newTags.length) {\r\n      addTags(newTags);\r\n      console.log(\"New tags:\", newTags);\r\n    } else {\r\n      //console.log(\"There are no new tags!\");\r\n    }\r\n  }\r\n\r\n  function fetchSourceObjectAndConvertIntoSourceRepresentation(sourceKey) {\r\n    if (sources) {\r\n      const sourceObject = sources[sourceKey];\r\n      if (sourceObject) {\r\n        return `${sourceObject.name} ${sourceObject.surname}, ${sourceObject.title}, ${sourceObject.city} ${sourceObject.year}`;\r\n      } else {\r\n        return \"source was deleted probably...\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function onAddSourceFormSubmit(updatedItem) {\r\n    addSource(updatedItem);\r\n    setIsAddSourceFormNeeded(false);\r\n  }\r\n\r\n  return (\r\n    <div className={\"card mb-2 shadow bg-\" + theme.mode + (theme.mode === \"dark\" ? \" border-secondary\" : \"\")}>\r\n      <div className=\"card-header fw-bold text-center\">{headerText}</div>\r\n      <div className=\"card-body\">\r\n        <form>\r\n          <textarea\r\n            className={\r\n              \"form-control mb-2 + bg-\" +\r\n              theme.mode +\r\n              \" text-\" +\r\n              (theme.mode === \"dark\" ? \"light\" : \"dark\")\r\n            }\r\n            placeholder=\"note content goes here\"\r\n            defaultValue={item ? item.content : \"\"}\r\n            onChange={(e) => setItem({ ...item, content: e.target.value })}\r\n          ></textarea>\r\n          <TagSearchForm\r\n            tags={tags}\r\n            chosenTags={itemTags}\r\n            setChosenTags={setItemTags}\r\n            form={true}\r\n          />\r\n          <hr />\r\n          <select\r\n            className={\r\n              \"form-select mb-2 + bg-\" +\r\n              theme.mode +\r\n              \" text-\" +\r\n              (theme.mode === \"dark\" ? \"light\" : \"dark\")\r\n            }\r\n            value={item ? (item.source ? item.source : \"\") : \"\"}\r\n            onChange={(e) => setItem({ ...item, source: e.target.value })}\r\n          >\r\n            <option>select source</option>\r\n            {sourcesList && sourcesList.length\r\n              ? sourcesList.map((sourceArray) => {\r\n                  const sourceKey = sourceArray[0];\r\n                  const sourceObject = sourceArray[1];\r\n                  const sourceRepresentation = `${sourceObject.name} ${sourceObject.surname}, ${sourceObject.title}, ${sourceObject.city} ${sourceObject.year}`;\r\n                  return (\r\n                    <option\r\n                      key={\"source-option-\" + sourceKey}\r\n                      value={sourceKey}\r\n                    >\r\n                      {sourceRepresentation}\r\n                    </option>\r\n                  );\r\n                })\r\n              : null}\r\n          </select>\r\n          <p\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => setIsAddSourceFormNeeded(true)}\r\n          >\r\n            ... or{\" \"}\r\n            <span style={{ textDecoration: \"underline\" }}>\r\n              add new source to database\r\n            </span>\r\n          </p>\r\n          <input\r\n            className={\r\n              \"form-control mb-2 + bg-\" +\r\n              theme.mode +\r\n              \" text-\" +\r\n              (theme.mode === \"dark\" ? \"light\" : \"dark\")\r\n            }\r\n            defaultValue={item ? item.page : \"\"}\r\n            placeholder=\"page\"\r\n            onChange={(e) => setItem({ ...item, page: e.target.value })}\r\n          />\r\n          {item && item.source ? (\r\n            <p>\r\n              {fetchSourceObjectAndConvertIntoSourceRepresentation(item.source)}{\" \"}\r\n              {item.page ? \" [\" + item.page + \"]\" : null}\r\n            </p>\r\n          ) : (\r\n            <p>This note has no source...</p>\r\n          )}\r\n        </form>\r\n        {isAddSourceFormNeeded ? (\r\n          <div>\r\n            <SourceForm\r\n              handleSubmit={onAddSourceFormSubmit}\r\n              handleCancel={() => setIsAddSourceFormNeeded(false)}\r\n              headerText=\"Add new source to database!\"\r\n              buttonText=\"Add new source\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <Link\r\n          to={link}\r\n          type=\"button\"\r\n          className=\"btn btn-success mb-2 d-block text-white\"\r\n          onClick={() => {\r\n            const date = createDate();\r\n            let itemWithDate;\r\n            if (passedItemKey) {\r\n              itemWithDate = { ...item, updatedAt: date };\r\n            } else {\r\n              itemWithDate = { ...item, createdAt: date };\r\n            }\r\n            if (itemWithDate) {\r\n              addNewTagsToDatabase();\r\n              if (passedItemKey) {\r\n                onItemFormClick(itemWithDate, passedItemKey);\r\n              } else {\r\n                onItemFormClick(itemWithDate);\r\n              }\r\n            } else {\r\n              alert(\r\n                \"There is a problem with adding/ updating date to your note... Note is not created / updated\"\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {buttonText}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function createShorterTitle(string) {\r\n    let newString = \"\";\r\n    for (let i = 0; i < string.length; i++) {\r\n        if (i < 37) {\r\n            newString = newString + string[i];\r\n        }\r\n    }\r\n    newString = newString + \"...\";\r\n    return newString;\r\n}\r\n\r\nexport function createShortContentAfterTitle(string) {\r\n    let newString = \"\";\r\n    for (let i = 0; i < string.length; i++) {\r\n        if (i >= 37 && i < 71) {\r\n            newString = newString + string[i];\r\n        }\r\n    }\r\n    newString = \"...\" + newString + \"...\";\r\n    return newString;\r\n}\r\n\r\nexport function createDate() {\r\n    const date = new Date();\r\n    const day = date.getUTCDate() < 10 ? \"0\" + date.getUTCDate() : date.getUTCDate();\r\n    const month = date.getUTCMonth() + 1 < 10 ? \"0\" + date.getUTCMonth() + 1 : date.getUTCMonth() + 1;\r\n    const year = date.getUTCFullYear();\r\n    const currentDate = year + \".\" + month + \".\" + day;\r\n    return currentDate;\r\n}","import { useTheme } from \"../hooks/use-theme\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport ItemForm from \"../components/organisms/ItemForm\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\n\r\nexport default function AddItemPage() {\r\n  const { theme } = useTheme();\r\n  const { user } = useAuth();\r\n  const { addItem, tags, addTags } = useDatabase();\r\n\r\n  return (\r\n    <div style={{ background: theme.background, color: theme.color }}>\r\n      {user && user.uid ? (\r\n        <ItemForm\r\n          tags={tags && tags.length ? tags : []}\r\n          addTags={addTags}\r\n          onItemFormClick={addItem}\r\n          link=\"/\"\r\n          buttonText=\"Add a new note\"\r\n          headerText=\"Create a new note!\"\r\n        />\r\n      ) : (\r\n        <h3>You need to log in to add an item...</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport ItemForm from \"../components/organisms/ItemForm\";\r\n\r\nexport default function UpdateItemPage() {\r\n  const { theme } = useTheme();\r\n  const { user } = useAuth();\r\n  const { items, updateItem, tags, addTags } = useDatabase();\r\n\r\n  const { itemKey } = useParams();\r\n\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (items && itemKey) {\r\n      setItem({\r\n        ...items[itemKey],\r\n        tags:\r\n          items[itemKey].tags && items[itemKey].tags.length\r\n            ? items[itemKey].tags\r\n            : []\r\n      });\r\n    }\r\n  }, [items, itemKey]);\r\n\r\n  return (\r\n    <div style={{ background: theme.background, color: theme.color }}>\r\n      {user && user.uid ? (\r\n        item ? (\r\n          <ItemForm\r\n            tags={tags && tags.length ? tags : []}\r\n            addTags={addTags}\r\n            onItemFormClick={updateItem}\r\n            link=\"/\"\r\n            buttonText=\"Update note\"\r\n            headerText=\"Update note!\"\r\n            passedItem={item ? item : null}\r\n            passedItemKey={itemKey ? itemKey : null}\r\n          />\r\n        ) : (\r\n          <h3>Downloading data...</h3>\r\n        )\r\n      ) : (\r\n        <h3>You need to log in to update this item if it belongs to you...</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useTheme } from \"../hooks/use-theme\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ItemCard from \"../components/molecules/ItemCard\";\r\n\r\nexport default function ItemPage() {\r\n  const { theme } = useTheme();\r\n  const { items, deleteItem } = useDatabase();\r\n\r\n  const { itemKey } = useParams();\r\n\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (items && itemKey) {\r\n      setItem(items[itemKey]);\r\n    }\r\n  }, [items, itemKey]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color\r\n      }}\r\n    >\r\n      {item ? (\r\n        <ItemCard\r\n          key={\"item-\" + itemKey}\r\n          item={item}\r\n          itemKey={itemKey}\r\n          editLink={\"/notes/update-note/\" + itemKey}\r\n          deleteFunction={() => deleteItem(itemKey)}\r\n          deleteLink=\"/\"\r\n        />\r\n      ) : (\r\n        <h1>Downloading data...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useDatabase } from \"../hooks/use-database\";\r\nimport TagButton from \"../components/atoms/TagButton\";\r\nconst ALPHABET = [\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"ć\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"h\",\r\n  \"i\",\r\n  \"j\",\r\n  \"k\",\r\n  \"l\",\r\n  \"ł\",\r\n  \"m\",\r\n  \"n\",\r\n  \"o\",\r\n  \"p\",\r\n  \"r\",\r\n  \"s\",\r\n  \"ś\",\r\n  \"t\",\r\n  \"u\",\r\n  \"w\",\r\n  \"v\",\r\n  \"x\",\r\n  \"y\",\r\n  \"z\",\r\n  \"ź\",\r\n  \"ż\"\r\n];\r\n\r\nexport default function TagsPage() {\r\n  const { tags } = useDatabase();\r\n  return (\r\n    <div className=\"tags-list\">\r\n      {ALPHABET.map((letter) => (\r\n        <div key={letter + \"-section\"} className=\"letter-section-in-tags-list\">\r\n          <h5>{letter}</h5>\r\n          <hr />\r\n          <div>\r\n            {tags.map((tag) =>\r\n              tag[0] === letter ? (\r\n                <TagButton key={\"tag-button-for-\" + tag} tag={tag} />\r\n              ) : null\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport SourceForm from \"../components/organisms/SourceForm\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\n\r\nexport default function AddSourcePage() {\r\n  const { sources, addSource } = useDatabase();\r\n  const { user } = useAuth();\r\n\r\n  const [item, setItem] = useState(null);\r\n\r\n  function onFormSubmit(updatedItem) {\r\n    addSource(updatedItem);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      console.log(\"item in AddSourcePage:\", item);\r\n    }\r\n  }, [item]);\r\n\r\n  return (\r\n    <div>\r\n      {user && user.uid ? (\r\n        <div>\r\n          <SourceForm\r\n            item={item}\r\n            handleSubmit={onFormSubmit}\r\n            headerText=\"Add new source!\"\r\n            buttonText=\"Add new source\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <h3>You need to log in to add a source...</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTheme } from \"../hooks/use-theme\";\r\n\r\nimport Header from \"../components/organisms/Header\";\r\nimport About from \"./About.js\";\r\nimport SignInForm from \"./SignInForm.js\";\r\nimport ItemsPage from \"./ItemsPage\";\r\nimport Footer from \"../components/organisms/Footer.js\";\r\nimport AddItemPage from \"./AddItemPage\";\r\nimport UpdateItemPage from \"./UpdateItemPage\";\r\nimport ItemPage from \"./ItemPage\";\r\nimport TagsPage from \"./TagsPage\";\r\nimport AddSourcePage from \"./AddSourcePage\";\r\n\r\nexport default function Container() {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.color,\r\n        minHeight: \"100vh\"\r\n      }}\r\n    >\r\n      <Header />\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          background: theme.background,\r\n          color: theme.color,\r\n          paddingTop: 70\r\n        }}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/signin\">\r\n            <SignInForm />\r\n          </Route>\r\n          <Route exact path=\"/notes/:itemKey\">\r\n            <ItemPage />\r\n          </Route>\r\n          <Route path=\"/tags\">\r\n            <TagsPage />\r\n          </Route>\r\n          <Route path=\"/add-note\">\r\n            <AddItemPage />\r\n          </Route>\r\n          <Route exact path=\"/notes/update-note/:itemKey\">\r\n            <UpdateItemPage />\r\n          </Route>\r\n          <Route exact path=\"/add-source\">\r\n            <AddSourcePage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <ItemsPage />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ThemeProvider } from \"./hooks/use-theme.js\";\r\nimport { AuthProvider } from \"./hooks/use-auth.js\";\r\nimport { DatabaseProvider } from \"./hooks/use-database.js\";\r\nimport Container from \"./pages/Container\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <AuthProvider>\r\n        <DatabaseProvider>\r\n          <Container />\r\n        </DatabaseProvider>\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\"; // CHANGE TO HASHROUTER BEFORE DEPLOYING GH-PAGES !!!\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./styles.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </StrictMode>,\r\n  rootElement\r\n);"],"sourceRoot":""}